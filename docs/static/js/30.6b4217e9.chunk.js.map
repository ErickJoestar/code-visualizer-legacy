{"version":3,"sources":["../node_modules/brace/mode/diff.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DiffHighlightRules","this","$rules","regex","token","defaultToken","caseInsensitive","inherits","BaseFoldMode","FoldMode","Range","levels","flag","regExpList","foldingStartMarker","RegExp","join","getFoldWidgetRange","session","foldStyle","row","line","getLine","start","column","length","regList","i","re","slice","test","l","getLength","fromPoints","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id"],"mappings":"6HAAAA,IAAIC,OAAO,gCAAiC,CAAC,UAAW,UAAW,SAAU,cAAe,kCAAkC,SAAUC,EAAUC,EAASC,GACzJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAqB,WACvBC,KAAKC,OAAS,CACZ,MAAS,CAAC,CACRC,MAAO,kCACPC,MAAO,wCACP,KAAQ,WACP,CAEDD,MAAO,8BACPC,MAAO,CAAC,WAAY,mBAAoB,WAAY,oBACnD,CAEDD,MAAO,8CACPC,MAAO,CAAC,mBAAoB,oCAAqC,oBAAqB,mBAAoB,oCAAqC,WAC/I,KAAQ,SACP,CACDD,MAAO,gCACPC,MAAO,CAAC,mBAAoB,aAC3B,CAEDD,MAAO,uBACPC,MAAO,CAAC,mBAAoB,OAAQ,YACnC,CAEDD,MAAO,wBACPC,MAAO,CAAC,mBAAoB,SAAU,YACrC,CACDD,MAAO,mCACPC,MAAO,CAAC,WAAY,WAAY,UAAW,aAC1C,CACDD,MAAO,YACPC,MAAO,YACN,CACDD,MAAO,SACPC,MAAO,QACN,CACDD,MAAO,QACPC,MAAO,WACN,CACDC,aAAc,YACdC,iBAAiB,MAKvBR,EAAIS,SAASP,EAAoBD,GACjCH,EAAQI,mBAAqBA,KAE/BP,IAAIC,OAAO,wBAAyB,CAAC,UAAW,UAAW,SAAU,cAAe,6BAA8B,cAAc,SAAUC,EAAUC,EAASC,GAC3J,aAEA,IAAIC,EAAMH,EAAS,iBACfa,EAAeb,EAAS,eAAec,SACvCC,EAAQf,EAAS,eAAee,MAEhCD,EAAWb,EAAQa,SAAW,SAAUE,EAAQC,GAClDX,KAAKY,WAAaF,EAClBV,KAAKW,KAAOA,EACZX,KAAKa,mBAAqBC,OAAO,KAAOJ,EAAOK,KAAK,KAAO,IAAKf,KAAKW,OAGvEd,EAAIS,SAASE,EAAUD,GACvB,WACEP,KAAKgB,mBAAqB,SAAUC,EAASC,EAAWC,GAQtD,IAPA,IAAIC,EAAOH,EAAQI,QAAQF,GACvBG,EAAQ,CACVH,IAAKA,EACLI,OAAQH,EAAKI,QAEXC,EAAUzB,KAAKY,WAEVc,EAAI,EAAGA,GAAKD,EAAQD,OAAQE,IAAK,CACxC,IAAIC,EAAKb,OAAO,KAAOW,EAAQG,MAAM,EAAGF,GAAGX,KAAK,KAAO,IAAKf,KAAKW,MACjE,GAAIgB,EAAGE,KAAKT,GAAO,MAGrB,IAAK,IAAIU,EAAIb,EAAQc,cAAeZ,EAAMW,IACxCV,EAAOH,EAAQI,QAAQF,IACnBQ,EAAGE,KAAKT,MAGd,GAAID,GAAOG,EAAMH,IAAM,EACvB,OAAOV,EAAMuB,WAAWV,EAAO,CAC7BH,IAAKA,EAAM,EACXI,OAAQH,EAAKI,WAGhBS,KAAKzB,EAAS0B,cAEnB1C,IAAIC,OAAO,gBAAiB,CAAC,UAAW,UAAW,SAAU,cAAe,gBAAiB,gCAAiC,0BAA0B,SAAUC,EAAUC,EAASC,GACnL,aAEA,IAAIC,EAAMH,EAAS,cACfyC,EAAWzC,EAAS,UAAU0C,KAC9BC,EAAiB3C,EAAS,0BAA0BK,mBACpDS,EAAWd,EAAS,kBAAkBc,SAEtC4B,EAAO,WACTpC,KAAKqC,eAAiBA,EACtBrC,KAAKsC,aAAe,IAAI9B,EAAS,CAAC,OAAQ,QAAS,SAAU,aAAc,MAG7EX,EAAIS,SAAS8B,EAAMD,GACnB,WACEnC,KAAKuC,IAAM,iBACVN,KAAKG,EAAKF,WACbvC,EAAQyC,KAAOA","file":"static/js/30.6b4217e9.chunk.js","sourcesContent":["ace.define(\"ace/mode/diff_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DiffHighlightRules = function DiffHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n        token: \"punctuation.definition.separator.diff\",\n        \"name\": \"keyword\"\n      }, {\n        //diff.range.unified\n        regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n        token: [\"constant\", \"constant.numeric\", \"constant\", \"comment.doc.tag\"]\n      }, {\n        //diff.range.normal\n        regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n        token: [\"constant.numeric\", \"punctuation.definition.range.diff\", \"constant.function\", \"constant.numeric\", \"punctuation.definition.range.diff\", \"invalid\"],\n        \"name\": \"meta.\"\n      }, {\n        regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n        token: [\"constant.numeric\", \"meta.tag\"]\n      }, {\n        // added\n        regex: \"^([!+>])(.*?)(\\\\s*)$\",\n        token: [\"support.constant\", \"text\", \"invalid\"]\n      }, {\n        // removed\n        regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n        token: [\"support.function\", \"string\", \"invalid\"]\n      }, {\n        regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n        token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n      }, {\n        regex: \"^Index.+$\",\n        token: \"variable\"\n      }, {\n        regex: \"^\\\\s+$\",\n        token: \"text\"\n      }, {\n        regex: \"\\\\s*$\",\n        token: \"invalid\"\n      }, {\n        defaultToken: \"invisible\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DiffHighlightRules, TextHighlightRules);\n  exports.DiffHighlightRules = DiffHighlightRules;\n});\nace.define(\"ace/mode/folding/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var Range = acequire(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function (levels, flag) {\n    this.regExpList = levels;\n    this.flag = flag;\n    this.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var start = {\n        row: row,\n        column: line.length\n      };\n      var regList = this.regExpList;\n\n      for (var i = 1; i <= regList.length; i++) {\n        var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n        if (re.test(line)) break;\n      }\n\n      for (var l = session.getLength(); ++row < l;) {\n        line = session.getLine(row);\n        if (re.test(line)) break;\n      }\n\n      if (row == start.row + 1) return;\n      return Range.fromPoints(start, {\n        row: row - 1,\n        column: line.length\n      });\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/diff_highlight_rules\", \"ace/mode/folding/diff\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var HighlightRules = acequire(\"./diff_highlight_rules\").DiffHighlightRules;\n  var FoldMode = acequire(\"./folding/diff\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"index\", \"\\\\+{3}\", \"@@|\\\\*{5}\"], \"i\");\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/diff\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}