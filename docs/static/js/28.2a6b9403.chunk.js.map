{"version":3,"sources":["../node_modules/brace/mode/d.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","DHighlightRules","storages","stringEscapesSeq","operators","keywordMapper","$keywords","createKeywordMapper","identifierRe","onMatch","value","currentState","state","unshift","substr","substring","length","map","Object","keys","indexOf","shift","embedRules","metaData","comment","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"static/js/28.2a6b9403.chunk.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function DocCommentHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/d_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DHighlightRules = function DHighlightRules() {\n    var keywords = \"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\" + \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\";\n    var keywordControls = \"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" + \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\";\n    var types = \"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" + \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" + \"int|long|short|void|uint|ulong|ushort|ucent|\" + \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\";\n    var modifiers = \"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" + \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" + \"public|pure|scope|shared|__gshared|synchronized|static|volatile\";\n    var storages = \"class|struct|union|template|interface|enum|macro\";\n    var stringEscapesSeq = {\n      token: \"constant.language.escape\",\n      regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" + \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\n    };\n    var builtinConstants = \"null|true|false|\" + \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\" + \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\";\n    var operators = \"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" + \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" + \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" + \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" + \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\";\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n      \"keyword.modifier\": modifiers,\n      \"keyword.control\": keywordControls,\n      \"keyword.type\": types,\n      \"keyword\": keywords,\n      \"keyword.storage\": storages,\n      \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\n      \"keyword.operator\": operators,\n      \"constant.language\": builtinConstants\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z_\\xA1-\\uFFFF][a-zA-Z\\\\d_\\xA1-\\uFFFF]*\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        //-------------------------------------------------------- COMMENTS\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"star-comment\"\n      }, {\n        token: \"comment.shebang\",\n        regex: \"^\\\\s*#!.*\"\n      }, {\n        token: \"comment\",\n        regex: \"\\\\/\\\\+\",\n        next: \"plus-comment\"\n      }, {\n        //-------------------------------------------------------- STRINGS\n        onMatch: function onMatch(value, currentState, state) {\n          state.unshift(this.next, value.substr(2));\n          return \"string\";\n        },\n        regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\n        next: 'operator-heredoc-string'\n      }, {\n        onMatch: function onMatch(value, currentState, state) {\n          state.unshift(this.next, value.substr(2));\n          return \"string\";\n        },\n        regex: 'q\"(?:[a-zA-Z_]+)$',\n        next: 'identifier-heredoc-string'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[xr]?\"',\n        next: \"quote-string\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[xr]?`',\n        next: \"backtick-string\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\n      }, {\n        //-------------------------------------------------------- RULES\n        token: [\"keyword\", \"text\", \"paren.lparen\"],\n        regex: /(asm)(\\s*)({)/,\n        next: \"d-asm\"\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\n        regex: \"(__traits)(\\\\s*)(\\\\()(\" + identifierRe + \")\"\n      }, {\n        // import|module abc\n        token: [\"keyword\", \"text\", \"variable.module\"],\n        regex: \"(import|module)(\\\\s+)((?:\" + identifierRe + \"\\\\.?)*)\"\n      }, {\n        // storage Name\n        token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\n        regex: \"(\" + storages + \")(\\\\s*)(\" + identifierRe + \")\"\n      }, {\n        // alias|typedef foo bar;\n        token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\n        regex: \"(alias|typedef)(\\\\s*)(\" + identifierRe + \")(\\\\s*)\"\n      }, {\n        //-------------------------------------------------------- OTHERS\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\n      }, {\n        token: \"entity.other.attribute-name\",\n        regex: \"@\" + identifierRe\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: operators\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"star-comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: 'comment'\n      }],\n      \"plus-comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\+\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: 'comment'\n      }],\n      \"quote-string\": [stringEscapesSeq, {\n        token: \"string\",\n        regex: '\"[cdw]?',\n        next: \"start\"\n      }, {\n        defaultToken: 'string'\n      }],\n      \"backtick-string\": [stringEscapesSeq, {\n        token: \"string\",\n        regex: '`[cdw]?',\n        next: \"start\"\n      }, {\n        defaultToken: 'string'\n      }],\n      \"operator-heredoc-string\": [{\n        onMatch: function onMatch(value, currentState, state) {\n          value = value.substring(value.length - 2, value.length - 1);\n          var map = {\n            '>': '<',\n            ']': '[',\n            ')': '(',\n            '}': '{'\n          };\n          if (Object.keys(map).indexOf(value) != -1) value = map[value];\n          if (value != state[1]) return \"string\";\n          state.shift();\n          state.shift();\n          return \"string\";\n        },\n        regex: '(?:[\\\\]\\\\)}>]+)\"',\n        next: 'start'\n      }, {\n        token: 'string',\n        regex: '[^\\\\]\\\\)}>]+'\n      }],\n      \"identifier-heredoc-string\": [{\n        onMatch: function onMatch(value, currentState, state) {\n          value = value.substring(0, value.length - 1);\n          if (value != state[1]) return \"string\";\n          state.shift();\n          state.shift();\n          return \"string\";\n        },\n        regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\n        next: 'start'\n      }, {\n        token: 'string',\n        regex: '[^\\\\]\\\\)}>]+'\n      }],\n      \"d-asm\": [{\n        token: \"paren.rparen\",\n        regex: \"\\\\}\",\n        next: \"start\"\n      }, {\n        token: 'keyword.instruction',\n        regex: '[a-zA-Z]+',\n        next: 'd-asm-instruction'\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      'd-asm-instruction': [{\n        token: 'constant.language',\n        regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\n      }, {\n        token: 'identifier',\n        regex: '[a-zA-Z]+'\n      }, {\n        token: 'string',\n        regex: '\".*\"'\n      }, {\n        token: 'comment',\n        regex: '//.*$'\n      }, {\n        token: 'constant.numeric',\n        regex: '[0-9.xA-F]+'\n      }, {\n        token: 'punctuation.operator',\n        regex: '\\\\,'\n      }, {\n        token: 'punctuation.operator',\n        regex: ';',\n        next: 'd-asm'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n\n  DHighlightRules.metaData = {\n    comment: 'D language',\n    fileTypes: ['d', 'di'],\n    firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\n    foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\n    foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\n    keyEquivalent: '^~D',\n    name: 'D',\n    scopeName: 'source.d'\n  };\n  oop.inherits(DHighlightRules, TextHighlightRules);\n  exports.DHighlightRules = DHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/d\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/d_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var DHighlightRules = acequire(\"./d_highlight_rules\").DHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = DHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/d\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}