{"version":3,"sources":["../node_modules/brace/mode/hjson.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","HjsonHighlightRules","this","$rules","start","include","token","regex","push","next","defaultToken","comment","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","blockComment","$id"],"mappings":"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","file":"static/js/56.6170f0c9.chunk.js","sourcesContent":["ace.define(\"ace/mode/hjson_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var HjsonHighlightRules = function HjsonHighlightRules() {\n    this.$rules = {\n      start: [{\n        include: \"#comments\"\n      }, {\n        include: \"#rootObject\"\n      }, {\n        include: \"#value\"\n      }],\n      \"#array\": [{\n        token: \"paren.lparen\",\n        regex: /\\[/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\]/,\n          next: \"pop\"\n        }, {\n          include: \"#value\"\n        }, {\n          include: \"#comments\"\n        }, {\n          token: \"text\",\n          regex: /,|$/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /[^\\s\\]]/\n        }, {\n          defaultToken: \"array\"\n        }]\n      }],\n      \"#comments\": [{\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(#)(.*$)/\n      }, {\n        token: \"comment.punctuation\",\n        regex: /\\/\\*/,\n        push: [{\n          token: \"comment.punctuation\",\n          regex: /\\*\\//,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block\"\n        }]\n      }, {\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(\\/\\/)(.*$)/\n      }],\n      \"#constant\": [{\n        token: \"constant\",\n        regex: /\\b(?:true|false|null)\\b/\n      }],\n      \"#keyname\": [{\n        token: \"keyword\",\n        regex: /(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/\n      }],\n      \"#mstring\": [{\n        token: \"string\",\n        regex: /'''/,\n        push: [{\n          token: \"string\",\n          regex: /'''/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#number\": [{\n        token: \"constant.numeric\",\n        regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,\n        comment: \"handles integer and decimal numbers\"\n      }],\n      \"#object\": [{\n        token: \"paren.lparen\",\n        regex: /\\{/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#rootObject\": [{\n        token: \"paren\",\n        regex: /(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /---none---/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#string\": [{\n        token: \"string\",\n        regex: /\"/,\n        push: [{\n          token: \"string\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#ustring\": [{\n        token: \"string\",\n        regex: /\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/\n      }],\n      \"#value\": [{\n        include: \"#constant\"\n      }, {\n        include: \"#number\"\n      }, {\n        include: \"#string\"\n      }, {\n        include: \"#array\"\n      }, {\n        include: \"#object\"\n      }, {\n        include: \"#comments\"\n      }, {\n        include: \"#mstring\"\n      }, {\n        include: \"#ustring\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  HjsonHighlightRules.metaData = {\n    fileTypes: [\"hjson\"],\n    foldingStartMarker: \"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",\n    foldingStopMarker: \"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",\n    keyEquivalent: \"^~J\",\n    name: \"Hjson\",\n    scopeName: \"source.hjson\"\n  };\n  oop.inherits(HjsonHighlightRules, TextHighlightRules);\n  exports.HjsonHighlightRules = HjsonHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/hjson\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/hjson_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var HjsonHighlightRules = acequire(\"./hjson_highlight_rules\").HjsonHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = HjsonHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/hjson\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}