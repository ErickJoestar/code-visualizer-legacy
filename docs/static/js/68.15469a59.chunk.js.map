{"version":3,"sources":["../node_modules/brace/mode/jsx.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","lang","JsxHighlightRules","keywords","arrayToMap","split","buildinConstants","reserved","value","hasOwnProperty","test","embedRules","Range","MatchingBraceOutdent","checkOutdent","line","input","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokens","getTokenizer","getLineTokens","type","$id"],"mappings":"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","file":"static/js/68.15469a59.chunk.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function DocCommentHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/jsx_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JsxHighlightRules = function JsxHighlightRules() {\n    var keywords = lang.arrayToMap((\"break|do|instanceof|typeof|case|else|new|var|catch|finally|return|void|continue|for|switch|default|while|function|this|\" + \"if|throw|\" + \"delete|in|try|\" + \"class|extends|super|import|from|into|implements|interface|static|mixin|override|abstract|final|\" + \"number|int|string|boolean|variant|\" + \"log|assert\").split(\"|\"));\n    var buildinConstants = lang.arrayToMap(\"null|true|false|NaN|Infinity|__FILE__|__LINE__|undefined\".split(\"|\"));\n    var reserved = lang.arrayToMap((\"debugger|with|\" + \"const|export|\" + \"let|private|public|yield|protected|\" + \"extern|native|as|operator|__fake__|__readonly__\").split(\"|\"));\n    var identifierRe = \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function\"],\n        regex: \"(function)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: function token(value) {\n          if (value == \"this\") return \"variable.language\";else if (value == \"function\") return \"storage.type\";else if (keywords.hasOwnProperty(value) || reserved.hasOwnProperty(value)) return \"keyword\";else if (buildinConstants.hasOwnProperty(value)) return \"constant.language\";else if (/^_?[A-Z][a-zA-Z0-9_]*$/.test(value)) return \"language.support.class\";else return \"identifier\";\n        },\n        regex: identifierRe\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({<]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}>]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n\n  oop.inherits(JsxHighlightRules, TextHighlightRules);\n  exports.JsxHighlightRules = JsxHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/jsx\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/jsx_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var JsxHighlightRules = acequire(\"./jsx_highlight_rules\").JsxHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\n  var CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  function Mode() {\n    this.HighlightRules = JsxHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  }\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/jsx\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}