{"version":3,"sources":["../node_modules/brace/mode/swift.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","lang","SwiftHighlightRules","keywordMapper","createKeywordMapper","options","nestable","interpolation","interpStart","nextState","mainRule","multiline","escape","escapeRegExp","lead","open","push","error","filter","Boolean","close","onMatch","val","state","stack","length","unshift","shift","indexOf","string","stateName","embedRules","normalizeRules","HighlightRules","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CstyleBehaviour","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"static/js/134.fad5eebe.chunk.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function DocCommentHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/swift_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var SwiftHighlightRules = function SwiftHighlightRules() {\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"\",\n      \"keyword\": \"__COLUMN__|__FILE__|__FUNCTION__|__LINE__\" + \"|as|associativity|break|case|class|continue|default|deinit|didSet\" + \"|do|dynamicType|else|enum|extension|fallthrough|for|func|get|if|import\" + \"|in|infix|init|inout|is|left|let|let|mutating|new|none|nonmutating\" + \"|operator|override|postfix|precedence|prefix|protocol|return|right\" + \"|safe|Self|self|set|struct|subscript|switch|Type|typealias\" + \"|unowned|unsafe|var|weak|where|while|willSet\" + \"|convenience|dynamic|final|infix|lazy|mutating|nonmutating|optional|override|postfix\" + \"|prefix|acequired|static|guard|defer\",\n      \"storage.type\": \"bool|double|Double\" + \"|extension|float|Float|int|Int|private|public|string|String\",\n      \"constant.language\": \"false|Infinity|NaN|nil|no|null|null|off|on|super|this|true|undefined|yes\",\n      \"support.function\": \"\"\n    }, \"identifier\");\n\n    function string(start, options) {\n      var nestable = options.nestable || options.interpolation;\n      var interpStart = options.interpolation && options.interpolation.nextState || \"start\";\n      var mainRule = {\n        regex: start + (options.multiline ? \"\" : \"(?=.)\"),\n        token: \"string.start\"\n      };\n      var nextState = [options.escape && {\n        regex: options.escape,\n        token: \"character.escape\"\n      }, options.interpolation && {\n        token: \"paren.quasi.start\",\n        regex: lang.escapeRegExp(options.interpolation.lead + options.interpolation.open),\n        push: interpStart\n      }, options.error && {\n        regex: options.error,\n        token: \"error.invalid\"\n      }, {\n        regex: start + (options.multiline ? \"\" : \"|$\"),\n        token: \"string.end\",\n        next: nestable ? \"pop\" : \"start\"\n      }, {\n        defaultToken: \"string\"\n      }].filter(Boolean);\n      if (nestable) mainRule.push = nextState;else mainRule.next = nextState;\n      if (!options.interpolation) return mainRule;\n      var open = options.interpolation.open;\n      var close = options.interpolation.close;\n      var counter = {\n        regex: \"[\" + lang.escapeRegExp(open + close) + \"]\",\n        onMatch: function onMatch(val, state, stack) {\n          this.next = val == open ? this.nextState : \"\";\n\n          if (val == open && stack.length) {\n            stack.unshift(\"start\", state);\n            return \"paren\";\n          }\n\n          if (val == close && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1) return \"paren.quasi.end\";\n          }\n\n          return val == open ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: interpStart\n      };\n      return [counter, mainRule];\n    }\n\n    function comments() {\n      return [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/(?=.)\",\n        next: [DocCommentHighlightRules.getTagRule(), {\n          token: \"comment\",\n          regex: \"$|^\",\n          next: \"start\"\n        }, {\n          defaultToken: \"comment\",\n          caseInsensitive: true\n        }]\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment.start\",\n        regex: /\\/\\*/,\n        stateName: \"nested_comment\",\n        push: [DocCommentHighlightRules.getTagRule(), {\n          token: \"comment.start\",\n          regex: /\\/\\*/,\n          push: \"nested_comment\"\n        }, {\n          token: \"comment.end\",\n          regex: \"\\\\*\\\\/\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment\",\n          caseInsensitive: true\n        }]\n      }];\n    }\n\n    this.$rules = {\n      start: [string('\"', {\n        escape: /\\\\(?:[0\\\\tnr\"']|u{[a-fA-F1-9]{0,8}})/,\n        interpolation: {\n          lead: \"\\\\\",\n          open: \"(\",\n          close: \")\"\n        },\n        error: /\\\\./,\n        multiline: false\n      }), comments({\n        type: \"c\",\n        nestable: true\n      }), {\n        regex: /@[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n        token: \"variable.parameter\"\n      }, {\n        regex: /[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n        token: keywordMapper\n      }, {\n        token: \"constant.numeric\",\n        regex: /[+-]?(?:0(?:b[01]+|o[0-7]+|x[\\da-fA-F])|\\d+(?:(?:\\.\\d*)?(?:[PpEe][+-]?\\d+)?)\\b)/\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(SwiftHighlightRules, TextHighlightRules);\n  exports.HighlightRules = SwiftHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/swift\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/swift_highlight_rules\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var HighlightRules = acequire(\"./swift_highlight_rules\").HighlightRules;\n  var CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = new CstyleBehaviour();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\",\n      nestable: true\n    };\n    this.$id = \"ace/mode/swift\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}