{"version":3,"sources":["../node_modules/brace/mode/praat.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","PraatHighlightRules","this","$rules","token","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","tokens","getTokenizer","getLineTokens","type","$id"],"mappings":"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","file":"static/js/105.4a7ff629.chunk.js","sourcesContent":["ace.define(\"ace/mode/praat_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PraatHighlightRules = function PraatHighlightRules() {\n    var keywords = \"if|then|else|elsif|elif|endif|fi|\" + \"endfor|endproc|\" + // related keywords specified below\n    \"while|endwhile|\" + \"repeat|until|\" + \"select|plus|minus|\" + \"assert|asserterror\";\n    var predefinedVariables = \"macintosh|windows|unix|\" + \"praatVersion|praatVersion\\\\$\" + \"pi|undefined|\" + \"newline\\\\$|tab\\\\$|\" + \"shellDirectory\\\\$|homeDirectory\\\\$|preferencesDirectory\\\\$|\" + \"temporaryDirectory\\\\$|defaultDirectory\\\\$\";\n    var directives = \"clearinfo|endSendPraat\";\n    var functions = \"writeInfo|writeInfoLine|appendInfo|appendInfoLine|info\\\\$|\" + \"writeFile|writeFileLine|appendFile|appendFileLine|\" + \"abs|round|floor|ceiling|min|max|imin|imax|\" + \"sqrt|sin|cos|tan|arcsin|arccos|arctan|arctan2|sinc|sincpi|\" + \"exp|ln|lnBeta|lnGamma|log10|log2|\" + \"sinh|cosh|tanh|arcsinh|arccosh|arctanh|\" + \"sigmoid|invSigmoid|erf|erfc|\" + \"random(?:Uniform|Integer|Gauss|Poisson|Binomial)|\" + \"gaussP|gaussQ|invGaussQ|incompleteGammaP|incompleteBeta|\" + \"chiSquareP|chiSquareQ|invChiSquareQ|studentP|studentQ|invStudentQ|\" + \"fisherP|fisherQ|invFisherQ|\" + \"binomialP|binomialQ|invBinomialP|invBinomialQ|\" + \"hertzToBark|barkToHerz|\" + \"hertzToMel|melToHertz|\" + \"hertzToSemitones|semitonesToHerz|\" + \"erb|hertzToErb|erbToHertz|\" + \"phonToDifferenceLimens|differenceLimensToPhon|\" + \"soundPressureToPhon|\" + \"beta|beta2|besselI|besselK|\" + \"numberOfColumns|numberOfRows|\" + \"selected|selected\\\\$|numberOfSelected|variableExists|\" + \"index|rindex|startsWith|endsWith|\" + \"index_regex|rindex_regex|replace_regex\\\\$|\" + \"length|extractWord\\\\$|extractLine\\\\$|extractNumber|\" + \"left\\\\$|right\\\\$|mid\\\\$|replace\\\\$|\" + \"date\\\\$|fixed\\\\$|percent\\\\$|\" + \"zero#|linear#|randomUniform#|randomInteger#|randomGauss#|\" + \"beginPause|endPause|\" + \"demoShow|demoWindowTitle|demoInput|demoWaitForInput|\" + \"demoClicked|demoClickedIn|demoX|demoY|\" + \"demoKeyPressed|demoKey\\\\$|\" + \"demoExtraControlKeyPressed|demoShiftKeyPressed|\" + \"demoCommandKeyPressed|demoOptionKeyPressed|\" + \"environment\\\\$|chooseReadFile\\\\$|\" + \"chooseDirectory\\\\$|createDirectory|fileReadable|deleteFile|\" + \"selectObject|removeObject|plusObject|minusObject|\" + \"runScript|exitScript|\" + \"beginSendPraat|endSendPraat|\" + \"objectsAreIdentical\";\n    var objectTypes = \"Activation|AffineTransform|AmplitudeTier|Art|Artword|Autosegment|\" + \"BarkFilter|CCA|Categories|Cepstrum|Cepstrumc|ChebyshevSeries|\" + \"ClassificationTable|Cochleagram|Collection|Configuration|\" + \"Confusion|ContingencyTable|Corpus|Correlation|Covariance|\" + \"CrossCorrelationTable|CrossCorrelationTables|DTW|Diagonalizer|\" + \"Discriminant|Dissimilarity|Distance|Distributions|DurationTier|\" + \"EEG|ERP|ERPTier|Eigen|Excitation|Excitations|ExperimentMFC|FFNet|\" + \"FeatureWeights|Formant|FormantFilter|FormantGrid|FormantPoint|\" + \"FormantTier|GaussianMixture|HMM|HMM_Observation|\" + \"HMM_ObservationSequence|HMM_State|HMM_StateSequence|Harmonicity|\" + \"ISpline|Index|Intensity|IntensityTier|IntervalTier|KNN|KlattGrid|\" + \"KlattTable|LFCC|LPC|Label|LegendreSeries|LinearRegression|\" + \"LogisticRegression|LongSound|Ltas|MFCC|MSpline|ManPages|\" + \"Manipulation|Matrix|MelFilter|MixingMatrix|Movie|Network|\" + \"OTGrammar|OTHistory|OTMulti|PCA|PairDistribution|ParamCurve|\" + \"Pattern|Permutation|Pitch|PitchTier|PointProcess|Polygon|\" + \"Polynomial|Procrustes|RealPoint|RealTier|ResultsMFC|Roots|SPINET|\" + \"SSCP|SVD|Salience|ScalarProduct|Similarity|SimpleString|\" + \"SortedSetOfString|Sound|Speaker|Spectrogram|Spectrum|SpectrumTier|\" + \"SpeechSynthesizer|SpellingChecker|Strings|StringsIndex|Table|\" + \"TableOfReal|TextGrid|TextInterval|TextPoint|TextTier|Tier|\" + \"Transition|VocalTract|Weight|WordList\";\n    this.$rules = {\n      \"start\": [{\n        token: \"string.interpolated\",\n        regex: /'((?:[a-z][a-zA-Z0-9_]*)(?:\\$|#|:[0-9]+)?)'/\n      }, {\n        token: [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\"],\n        regex: /(^\\s*)(?:([a-z][a-zA-Z0-9_]*\\$?\\s+)(=)(\\s+))?(stopwatch)/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"string\"],\n        regex: /(^\\s*)(print(?:line|tab)?|echo|exit|pause|send(?:praat|socket)|include|execute|system(?:_nocheck)?)(\\s+)(.*)/\n      }, {\n        token: [\"text\", \"keyword\"],\n        regex: \"(^\\\\s*)(\" + directives + \")$\"\n      }, {\n        token: [\"text\", \"keyword.operator\", \"text\"],\n        regex: /(\\s+)((?:\\+|-|\\/|\\*|<|>)=?|==?|!=|%|\\^|\\||and|or|not)(\\s+)/\n      }, {\n        token: [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\", \"text\", \"keyword\"],\n        regex: /(^\\s*)(?:([a-z][a-zA-Z0-9_]*\\$?\\s+)(=)(\\s+))?(?:((?:no)?warn|(?:unix_)?nocheck|noprogress)(\\s+))?((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"keyword\"],\n        regex: /(^\\s*)(?:(demo)?(\\s+))((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"keyword\"],\n        regex: /^(\\s*)(?:(demo)(\\s+))?(10|12|14|16|24)$/\n      }, {\n        token: [\"text\", \"support.function\", \"text\"],\n        regex: /(\\s*)(do\\$?)(\\s*:\\s*|\\s*\\(\\s*)/\n      }, {\n        token: \"entity.name.type\",\n        regex: \"(\" + objectTypes + \")\"\n      }, {\n        token: \"variable.language\",\n        regex: \"(\" + predefinedVariables + \")\"\n      }, {\n        token: [\"support.function\", \"text\"],\n        regex: \"((?:\" + functions + \")\\\\$?)(\\\\s*(?::|\\\\())\"\n      }, {\n        token: \"keyword\",\n        regex: /(\\bfor\\b)/,\n        next: \"for\"\n      }, {\n        token: \"keyword\",\n        regex: \"(\\\\b(?:\" + keywords + \")\\\\b)\"\n      }, {\n        token: \"string\",\n        regex: /\"[^\"]*\"/\n      }, {\n        token: \"string\",\n        regex: /\"[^\"]*$/,\n        next: \"brokenstring\"\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"entity.name.section\"],\n        regex: /(^\\s*)(\\bform\\b)(\\s+)(.*)/,\n        next: \"form\"\n      }, {\n        token: \"constant.numeric\",\n        regex: /\\b[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.function\"],\n        regex: /(procedure)(\\s+)(\\S+)/\n      }, {\n        token: [\"entity.name.function\", \"text\"],\n        regex: /(@\\S+)(:|\\s*\\()/\n      }, {\n        token: [\"text\", \"keyword\", \"text\", \"entity.name.function\"],\n        regex: /(^\\s*)(call)(\\s+)(\\S+)/\n      }, {\n        token: \"comment\",\n        regex: /(^\\s*#|;).*$/\n      }, {\n        token: \"text\",\n        regex: /\\s+/\n      }],\n      \"form\": [{\n        token: [\"keyword\", \"text\", \"constant.numeric\"],\n        regex: /((?:optionmenu|choice)\\s+)(\\S+:\\s+)([0-9]+)/\n      }, {\n        token: [\"keyword\", \"constant.numeric\"],\n        regex: /((?:option|button)\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\n      }, {\n        token: [\"keyword\", \"string\"],\n        regex: /((?:option|button)\\s+)(.*)/\n      }, {\n        token: [\"keyword\", \"text\", \"string\"],\n        regex: /((?:sentence|text)\\s+)(\\S+\\s*)(.*)/\n      }, {\n        token: [\"keyword\", \"text\", \"string\", \"invalid.illegal\"],\n        regex: /(word\\s+)(\\S+\\s*)(\\S+)?(\\s.*)?/\n      }, {\n        token: [\"keyword\", \"text\", \"constant.language\"],\n        regex: /(boolean\\s+)(\\S+\\s*)(0|1|\"?(?:yes|no)\"?)/\n      }, {\n        token: [\"keyword\", \"text\", \"constant.numeric\"],\n        regex: /((?:real|natural|positive|integer)\\s+)(\\S+\\s*)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\n      }, {\n        token: [\"keyword\", \"string\"],\n        regex: /(comment\\s+)(.*)/\n      }, {\n        token: \"keyword\",\n        regex: 'endform',\n        next: \"start\"\n      }],\n      \"for\": [{\n        token: [\"keyword\", \"text\", \"constant.numeric\", \"text\"],\n        regex: /(from|to)(\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?)(\\s*)/\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: /(from|to)(\\s+\\S+\\s*)/\n      }, {\n        token: \"text\",\n        regex: /$/,\n        next: \"start\"\n      }],\n      \"brokenstring\": [{\n        token: [\"text\", \"string\"],\n        regex: /(\\s*\\.{3})([^\"]*)/\n      }, {\n        token: \"string\",\n        regex: /\"/,\n        next: \"start\"\n      }]\n    };\n  };\n\n  oop.inherits(PraatHighlightRules, TextHighlightRules);\n  exports.PraatHighlightRules = PraatHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/praat\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/praat_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var PraatHighlightRules = acequire(\"./praat_highlight_rules\").PraatHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = PraatHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/praat\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}