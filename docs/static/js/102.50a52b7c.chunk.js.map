{"version":3,"sources":["../node_modules/brace/mode/pig.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","PigHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","caseInsensitive","todo","include","normalizeRules","metaData","fileTypes","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","blockComment","$id"],"mappings":"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","file":"static/js/102.50a52b7c.chunk.js","sourcesContent":["ace.define(\"ace/mode/pig_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PigHighlightRules = function PigHighlightRules() {\n    this.$rules = {\n      start: [{\n        token: \"comment.block.pig\",\n        regex: /\\/\\*/,\n        push: [{\n          token: \"comment.block.pig\",\n          regex: /\\*\\//,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block.pig\"\n        }]\n      }, {\n        token: \"comment.line.double-dash.asciidoc\",\n        regex: /--.*$/\n      }, {\n        token: \"keyword.control.pig\",\n        regex: /\\b(?:ASSERT|LOAD|STORE|DUMP|FILTER|DISTINCT|FOREACH|GENERATE|STREAM|JOIN|COGROUP|GROUP|CROSS|ORDER|LIMIT|UNION|SPLIT|DESCRIBE|EXPLAIN|ILLUSTRATE|AS|BY|INTO|USING|LIMIT|PARALLEL|OUTER|INNER|DEFAULT|LEFT|SAMPLE|RANK|CUBE|ALL|KILL|QUIT|MAPREDUCE|ASC|DESC|THROUGH|SHIP|CACHE|DECLARE|CASE|WHEN|THEN|END|IN|PARTITION|FULL|IMPORT|IF|ONSCHEMA|INPUT|OUTPUT)\\b/,\n        caseInsensitive: true\n      }, {\n        token: \"storage.datatypes.pig\",\n        regex: /\\b(?:int|long|float|double|chararray|bytearray|boolean|datetime|biginteger|bigdecimal|tuple|bag|map)\\b/,\n        caseInsensitive: true\n      }, {\n        token: \"support.function.storage.pig\",\n        regex: /\\b(?:PigStorage|BinStorage|BinaryStorage|PigDump|HBaseStorage|JsonLoader|JsonStorage|AvroStorage|TextLoader|PigStreaming|TrevniStorage|AccumuloStorage)\\b/\n      }, {\n        token: \"support.function.udf.pig\",\n        regex: /\\b(?:DIFF|TOBAG|TOMAP|TOP|TOTUPLE|RANDOM|FLATTEN|flatten|CUBE|ROLLUP|IsEmpty|ARITY|PluckTuple|SUBTRACT|BagToString)\\b/\n      }, {\n        token: \"support.function.udf.math.pig\",\n        regex: /\\b(?:ABS|ACOS|ASIN|ATAN|CBRT|CEIL|COS|COSH|EXP|FLOOR|LOG|LOG10|ROUND|ROUND_TO|SIN|SINH|SQRT|TAN|TANH|AVG|COUNT|COUNT_STAR|MAX|MIN|SUM|COR|COV)\\b/\n      }, {\n        token: \"support.function.udf.string.pig\",\n        regex: /\\b(?:CONCAT|INDEXOF|LAST_INDEX_OF|LCFIRST|LOWER|REGEX_EXTRACT|REGEX_EXTRACT_ALL|REPLACE|SIZE|STRSPLIT|SUBSTRING|TOKENIZE|TRIM|UCFIRST|UPPER|LTRIM|RTRIM|ENDSWITH|STARTSWITH|TRIM)\\b/\n      }, {\n        token: \"support.function.udf.datetime.pig\",\n        regex: /\\b(?:AddDuration|CurrentTime|DaysBetween|GetDay|GetHour|GetMilliSecond|GetMinute|GetMonth|GetSecond|GetWeek|GetWeekYear|GetYear|HoursBetween|MilliSecondsBetween|MinutesBetween|MonthsBetween|SecondsBetween|SubtractDuration|ToDate|WeeksBetween|YearsBetween|ToMilliSeconds|ToString|ToUnixTime)\\b/\n      }, {\n        token: \"support.function.command.pig\",\n        regex: /\\b(?:cat|cd|copyFromLocal|copyToLocal|cp|ls|mkdir|mv|pwd|rm)\\b/\n      }, {\n        token: \"variable.pig\",\n        regex: /\\$[a_zA-Z0-9_]+/\n      }, {\n        token: \"constant.language.pig\",\n        regex: /\\b(?:NULL|true|false|stdin|stdout|stderr)\\b/,\n        caseInsensitive: true\n      }, {\n        token: \"constant.numeric.pig\",\n        regex: /\\b\\d+(?:\\.\\d+)?\\b/\n      }, {\n        token: \"keyword.operator.comparison.pig\",\n        regex: /!=|==|<|>|<=|>=|\\b(?:MATCHES|IS|OR|AND|NOT)\\b/,\n        caseInsensitive: true\n      }, {\n        token: \"keyword.operator.arithmetic.pig\",\n        regex: /\\+|\\-|\\*|\\/|\\%|\\?|:|::|\\.\\.|#/\n      }, {\n        token: \"string.quoted.double.pig\",\n        regex: /\"/,\n        push: [{\n          token: \"string.quoted.double.pig\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          token: \"constant.character.escape.pig\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string.quoted.double.pig\"\n        }]\n      }, {\n        token: \"string.quoted.single.pig\",\n        regex: /'/,\n        push: [{\n          token: \"string.quoted.single.pig\",\n          regex: /'/,\n          next: \"pop\"\n        }, {\n          token: \"constant.character.escape.pig\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string.quoted.single.pig\"\n        }]\n      }, {\n        todo: {\n          token: [\"text\", \"keyword.parameter.pig\", \"text\", \"storage.type.parameter.pig\"],\n          regex: /^(\\s*)(set)(\\s+)(\\S+)/,\n          caseInsensitive: true,\n          push: [{\n            token: \"text\",\n            regex: /$/,\n            next: \"pop\"\n          }, {\n            include: \"$self\"\n          }]\n        }\n      }, {\n        token: [\"text\", \"keyword.alias.pig\", \"text\", \"storage.type.alias.pig\"],\n        regex: /(\\s*)(DEFINE|DECLARE|REGISTER)(\\s+)(\\S+)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"text\",\n          regex: /;?$/,\n          next: \"pop\"\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  PigHighlightRules.metaData = {\n    fileTypes: [\"pig\"],\n    name: \"Pig\",\n    scopeName: \"source.pig\"\n  };\n  oop.inherits(PigHighlightRules, TextHighlightRules);\n  exports.PigHighlightRules = PigHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/pig\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/pig_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var PigHighlightRules = acequire(\"./pig_highlight_rules\").PigHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = PigHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/pig\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}