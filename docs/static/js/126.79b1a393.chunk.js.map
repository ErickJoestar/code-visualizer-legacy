{"version":3,"sources":["../node_modules/brace/mode/snippets.js"],"names":["ace","define","acequire","exports","module","oop","BaseFoldMode","FoldMode","Range","inherits","this","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","TextHighlightRules","SnippetHighlightRules","builtins","$rules","token","regex","onMatch","value","state","stack","unshift","tokenName","splice","charClass","SnippetGroupHighlightRules","embedRules","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$indentWithTabs","lineCommentStart","$id"],"mappings":"+HAAAA,IAAIC,OAAO,0BAA2B,CAAC,UAAW,UAAW,SAAU,cAAe,6BAA8B,cAAc,SAAUC,EAAUC,EAASC,GAC7J,aAEA,IAAIC,EAAMH,EAAS,iBACfI,EAAeJ,EAAS,eAAeK,SACvCC,EAAQN,EAAS,eAAeM,MAEhCD,EAAWJ,EAAQI,SAAW,aAElCF,EAAII,SAASF,EAAUD,GACvB,WACEI,KAAKC,mBAAqB,SAAUC,EAASC,EAAWC,GACtD,IAAIC,EAAQL,KAAKM,iBAAiBJ,EAASE,GAC3C,GAAIC,EAAO,OAAOA,EAClB,IAAIE,EAAK,KACLC,EAAON,EAAQO,QAAQL,GACvBM,EAAaF,EAAKG,OAAOJ,GAC7B,IAAmB,GAAfG,GAAwC,KAApBF,EAAKE,GAA7B,CAMA,IALA,IAAIE,EAAcJ,EAAKK,OACnBC,EAASZ,EAAQa,YACjBC,EAAWZ,EACXa,EAASb,IAEJA,EAAMU,GAAQ,CAErB,IAAII,GADJV,EAAON,EAAQO,QAAQL,IACNO,OAAOJ,GACxB,IAAc,GAAVW,EAAJ,CACA,GAAmB,KAAfV,EAAKU,GAAe,MACxBD,EAASb,GAGX,GAAIa,EAASD,EAAU,CACrB,IAAIG,EAAYjB,EAAQO,QAAQQ,GAAQJ,OACxC,OAAO,IAAIf,EAAMkB,EAAUJ,EAAaK,EAAQE,MAIpDnB,KAAKoB,cAAgB,SAAUlB,EAASC,EAAWC,GACjD,IAAII,EAAON,EAAQO,QAAQL,GACvBiB,EAASb,EAAKG,OAAO,MACrBW,EAAOpB,EAAQO,QAAQL,EAAM,GAC7BmB,EAAOrB,EAAQO,QAAQL,EAAM,GAC7BoB,EAAaD,EAAKZ,OAAO,MACzBc,EAAaH,EAAKX,OAAO,MAE7B,IAAe,GAAXU,EAEF,OADAnB,EAAQwB,YAAYtB,EAAM,IAAoB,GAAfoB,GAAoBA,EAAaC,EAAa,QAAU,GAChF,GAGT,IAAmB,GAAfD,GACF,GAAIH,GAAUI,GAA8B,KAAhBjB,EAAKa,IAAkC,KAAhBC,EAAKD,GAGtD,OAFAnB,EAAQwB,YAAYtB,EAAM,GAAK,GAC/BF,EAAQwB,YAAYtB,EAAM,GAAK,GACxB,aAEJ,GAAIoB,GAAcH,GAA0B,KAAhBb,EAAKa,IAAkC,KAAhBE,EAAKF,KACf,GAA1CnB,EAAQO,QAAQL,EAAM,GAAGO,OAAO,MAGlC,OAFAT,EAAQwB,YAAYtB,EAAM,GAAK,QAC/BF,EAAQwB,YAAYtB,EAAM,GAAK,GACxB,GAKX,OAD6CF,EAAQwB,YAAYtB,EAAM,IAApD,GAAfoB,GAAoBA,EAAaH,EAAuC,QAA4C,GACpHA,EAASI,EAAmB,QAAoB,KAErDE,KAAK9B,EAAS+B,cAEnBtC,IAAIC,OAAO,oBAAqB,CAAC,UAAW,UAAW,SAAU,cAAe,gBAAiB,gCAAiC,4BAA4B,SAAUC,EAAUC,EAASC,GACzL,aAEA,IAAIC,EAAMH,EAAS,cACfqC,EAAWrC,EAAS,UAAUsC,KAC9BC,EAAqBvC,EAAS,0BAA0BuC,mBAExDC,EAAwB,WAC1B,IAAIC,EAAW,yHACfjC,KAAKkC,OAAS,CACZ,MAAS,CAAC,CACRC,MAAO,2BACPC,MAAO,cACN,CACDD,MAAO,UACPC,MAAO,iBAAmBH,EAAW,QACpC,CACDE,MAAO,WACPC,MAAO,WACN,CACDC,QAAS,SAAiBC,EAAOC,EAAOC,GAEtC,OADIA,EAAM,GAAIA,EAAM,KAAUA,EAAMC,QAAQF,EAAO,GAC5CvC,KAAK0C,WAEdA,UAAW,cACXN,MAAO,OACPd,KAAM,WACL,CACDe,QAAS,SAAiBC,EAAOC,EAAOC,GACtC,OAAKA,EAAM,IACXA,EAAM,KACDA,EAAM,IAAIA,EAAMG,OAAO,EAAG,GACxB3C,KAAK0C,WAHU,QAKxBA,UAAW,cACXN,MAAO,KACN,CACDD,MAAO,cACPC,MAAO,iBAET,QAAW,CAAC,CACVA,MAAO,QACPD,MAAO,oBACN,CACDA,MAAO,UACPC,MAAO,cAAgBH,EAAW,QACjC,CACDE,MAAO,WACPC,MAAO,QACN,CACDA,MAAO,IACPD,MAAO,uBACPb,KAAM,SACL,CACDc,MAAO,KACPD,MAAO,eACPb,KAAM,UACL,CACDc,MAAO,GACPd,KAAM,UAER,OAAU,CAAC,CACTc,MAAO,MACPD,MAAO,UACN,CACDC,MAAO,KACPD,MAAO,cACPb,KAAM,aACL,CACDc,MAAO,IACPD,MAAO,eACPb,KAAM,UACL,CACD,MAAS,eACTc,MAAO,MAETQ,UAAW,CAAC,CACVR,MAAO,MACPD,MAAO,UACN,CACDC,MAAO,MACPD,MAAO,YACPb,KAAM,UACL,CACD,MAAS,eACTc,MAAO,MAET,OAAU,CAAC,CACTA,MAAO,YACPD,MAAO,WACN,CACDC,MAAO,QACPD,MAAO,YACN,CACDC,MAAO,YACPD,MAAO,eACPb,KAAM,SACL,CACD,MAAS,SACTc,MAAO,QAKbzC,EAAII,SAASiC,EAAuBD,GACpCtC,EAAQuC,sBAAwBA,EAEhC,IAAIa,EAA6B,WAC/B7C,KAAKkC,OAAS,CACZ,MAAS,CAAC,CACRC,MAAO,OACPC,MAAO,OACPd,KAAM,YACL,CACDa,MAAO,UACPC,MAAO,SACN,CACDD,MAAO,UACPC,MAAO,QACN,CACDD,MAAO,2BACPC,MAAO,UACPd,KAAM,SACL,CACDa,MAAO,2BACPC,MAAO,wEAET,MAAS,CAAC,CACRD,MAAO,OACPC,MAAO,OACN,CACDD,MAAO,UACPC,MAAO,KACN,CACDD,MAAO,QACPC,MAAO,IACPd,KAAM,WAGVtB,KAAK8C,WAAWd,EAAuB,MAAO,CAAC,CAC7CG,MAAO,OACPC,MAAO,OACPd,KAAM,YACL,CACDe,QAAS,SAAiBC,EAAOC,EAAOC,GAEtC,OADAA,EAAMG,OAAOH,EAAM3B,QACZb,KAAK0C,WAEdA,UAAW,OACXN,MAAO,UACPd,KAAM,YAIV3B,EAAII,SAAS8C,EAA4Bd,GACzCtC,EAAQoD,2BAA6BA,EACrC,IAAIhD,EAAWL,EAAS,oBAAoBK,SAExCiC,EAAO,WACT9B,KAAK+C,eAAiBF,EACtB7C,KAAKgD,aAAe,IAAInD,EACxBG,KAAKiD,WAAajD,KAAKkD,mBAGzBvD,EAAII,SAAS+B,EAAMD,GACnB,WACE7B,KAAKmD,iBAAkB,EACvBnD,KAAKoD,iBAAmB,IACxBpD,KAAKqD,IAAM,qBACV1B,KAAKG,EAAKF,WACbnC,EAAQqC,KAAOA","file":"static/js/126.79b1a393.chunk.js","sourcesContent":["ace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var Range = acequire(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/snippets\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/text_highlight_rules\", \"ace/mode/folding/coffee\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var SnippetHighlightRules = function SnippetHighlightRules() {\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" + \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n    this.$rules = {\n      \"start\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\[\\$}`\\\\]/\n      }, {\n        token: \"keyword\",\n        regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\$\\\\w+\"\n      }, {\n        onMatch: function onMatch(value, state, stack) {\n          if (stack[1]) stack[1]++;else stack.unshift(state, 1);\n          return this.tokenName;\n        },\n        tokenName: \"markup.list\",\n        regex: \"\\\\${\",\n        next: \"varDecl\"\n      }, {\n        onMatch: function onMatch(value, state, stack) {\n          if (!stack[1]) return \"text\";\n          stack[1]--;\n          if (!stack[1]) stack.splice(0, 2);\n          return this.tokenName;\n        },\n        tokenName: \"markup.list\",\n        regex: \"}\"\n      }, {\n        token: \"doc.comment\",\n        regex: /^\\${2}-{5,}$/\n      }],\n      \"varDecl\": [{\n        regex: /\\d+\\b/,\n        token: \"constant.numeric\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\w+\"\n      }, {\n        regex: /:/,\n        token: \"punctuation.operator\",\n        next: \"start\"\n      }, {\n        regex: /\\//,\n        token: \"string.regex\",\n        next: \"regexp\"\n      }, {\n        regex: \"\",\n        next: \"start\"\n      }],\n      \"regexp\": [{\n        regex: /\\\\./,\n        token: \"escape\"\n      }, {\n        regex: /\\[/,\n        token: \"regex.start\",\n        next: \"charClass\"\n      }, {\n        regex: \"/\",\n        token: \"string.regex\",\n        next: \"format\"\n      }, {\n        \"token\": \"string.regex\",\n        regex: \".\"\n      }],\n      charClass: [{\n        regex: \"\\\\.\",\n        token: \"escape\"\n      }, {\n        regex: \"\\\\]\",\n        token: \"regex.end\",\n        next: \"regexp\"\n      }, {\n        \"token\": \"string.regex\",\n        regex: \".\"\n      }],\n      \"format\": [{\n        regex: /\\\\[ulULE]/,\n        token: \"keyword\"\n      }, {\n        regex: /\\$\\d+/,\n        token: \"variable\"\n      }, {\n        regex: \"/[gim]*:?\",\n        token: \"string.regex\",\n        next: \"start\"\n      }, {\n        \"token\": \"string\",\n        regex: \".\"\n      }]\n    };\n  };\n\n  oop.inherits(SnippetHighlightRules, TextHighlightRules);\n  exports.SnippetHighlightRules = SnippetHighlightRules;\n\n  var SnippetGroupHighlightRules = function SnippetGroupHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"text\",\n        regex: \"^\\\\t\",\n        next: \"sn-start\"\n      }, {\n        token: \"invalid\",\n        regex: /^ \\s*/\n      }, {\n        token: \"comment\",\n        regex: /^#.*/\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"^regex \",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"\n      }],\n      \"regex\": [{\n        token: \"text\",\n        regex: \"\\\\.\"\n      }, {\n        token: \"keyword\",\n        regex: \"/\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"start\"\n      }]\n    };\n    this.embedRules(SnippetHighlightRules, \"sn-\", [{\n      token: \"text\",\n      regex: \"^\\\\t\",\n      next: \"sn-start\"\n    }, {\n      onMatch: function onMatch(value, state, stack) {\n        stack.splice(stack.length);\n        return this.tokenName;\n      },\n      tokenName: \"text\",\n      regex: \"^(?!\\t)\",\n      next: \"start\"\n    }]);\n  };\n\n  oop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\n  exports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\n  var FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}