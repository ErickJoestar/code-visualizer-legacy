{"version":3,"sources":["../node_modules/brace/mode/r.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","TexHighlightRules","textClass","this","$rules","token","regex","next","inherits","lang","RHighlightRules","keywords","arrayToMap","split","buildinConstants","onMatch","value","match","rdRules","getRules","i","length","addRules","unshift","push","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"mappings":"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","file":"static/js/110.bff41642.chunk.js","sourcesContent":["ace.define(\"ace/mode/tex_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var TexHighlightRules = function TexHighlightRules(textClass) {\n    if (!textClass) textClass = \"text\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"%.*$\"\n      }, {\n        token: textClass,\n        // non-command\n        regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\n        next: \"nospell\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: textClass,\n        regex: \"\\\\s+\"\n      }],\n      \"nospell\": [{\n        token: \"comment\",\n        regex: \"%.*$\",\n        next: \"start\"\n      }, {\n        token: \"nospell.\" + textClass,\n        // non-command\n        regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\n      }, {\n        token: \"keyword\",\n        // command\n        regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\n        next: \"start\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"}\",\n        next: \"start\"\n      }, {\n        token: \"nospell.\" + textClass,\n        regex: \"\\\\s+\"\n      }, {\n        token: \"nospell.\" + textClass,\n        regex: \"\\\\w+\"\n      }]\n    };\n  };\n\n  oop.inherits(TexHighlightRules, TextHighlightRules);\n  exports.TexHighlightRules = TexHighlightRules;\n});\nace.define(\"ace/mode/r_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\", \"ace/mode/tex_highlight_rules\"], function (acequire, exports, module) {\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var TexHighlightRules = acequire(\"./tex_highlight_rules\").TexHighlightRules;\n\n  var RHighlightRules = function RHighlightRules() {\n    var keywords = lang.arrayToMap(\"function|if|in|break|next|repeat|else|for|return|switch|while|try|tryCatch|stop|warning|acequire|library|attach|detach|source|setMethod|setGeneric|setGroupGeneric|setClass\".split(\"|\"));\n    var buildinConstants = lang.arrayToMap((\"NULL|NA|TRUE|FALSE|T|F|Inf|NaN|NA_integer_|NA_real_|NA_character_|\" + \"NA_complex_\").split(\"|\"));\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.sectionhead\",\n        regex: \"#+(?!').*(?:----|====|####)\\\\s*$\"\n      }, {\n        token: \"comment\",\n        regex: \"#+'\",\n        next: \"rd-start\"\n      }, {\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[\"]',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: \"[']\",\n        next: \"qstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // explicit integer\n        regex: \"\\\\d+L\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // number\n        regex: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // number with leading decimal\n        regex: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:TRUE|FALSE|T|F)\\\\b\"\n      }, {\n        token: \"identifier\",\n        regex: \"`.*?`\"\n      }, {\n        onMatch: function onMatch(value) {\n          if (keywords[value]) return \"keyword\";else if (buildinConstants[value]) return \"constant.language\";else if (value == '...' || value.match(/^\\.\\.\\d+$/)) return \"variable.language\";else return \"identifier\";\n        },\n        regex: \"[a-zA-Z.][a-zA-Z0-9._]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"%%|>=|<=|==|!=|\\\\->|<\\\\-|\\\\|\\\\||&&|=|\\\\+|\\\\-|\\\\*|/|\\\\^|>|<|!|&|\\\\||~|\\\\$|:\"\n      }, {\n        token: \"keyword.operator\",\n        // infix operators\n        regex: \"%.*?%\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.keyword.operator\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }]\n    };\n    var rdRules = new TexHighlightRules(\"comment\").getRules();\n\n    for (var i = 0; i < rdRules[\"start\"].length; i++) {\n      rdRules[\"start\"][i].token += \".virtual-comment\";\n    }\n\n    this.addRules(rdRules, \"rd-\");\n    this.$rules[\"rd-start\"].unshift({\n      token: \"text\",\n      regex: \"^\",\n      next: \"start\"\n    });\n    this.$rules[\"rd-start\"].unshift({\n      token: \"keyword\",\n      regex: \"@(?!@)[^ ]*\"\n    });\n    this.$rules[\"rd-start\"].unshift({\n      token: \"comment\",\n      regex: \"@@\"\n    });\n    this.$rules[\"rd-start\"].push({\n      token: \"comment\",\n      regex: \"[^%\\\\\\\\[({\\\\])}]+\"\n    });\n  };\n\n  oop.inherits(RHighlightRules, TextHighlightRules);\n  exports.RHighlightRules = RHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/r\", [\"require\", \"exports\", \"module\", \"ace/range\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/text_highlight_rules\", \"ace/mode/r_highlight_rules\", \"ace/mode/matching_brace_outdent\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var RHighlightRules = acequire(\"./r_highlight_rules\").RHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Mode = function Mode() {\n    this.HighlightRules = RHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/r\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}