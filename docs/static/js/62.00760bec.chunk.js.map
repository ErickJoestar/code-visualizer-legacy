{"version":3,"sources":["../node_modules/brace/mode/jack.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","JackHighlightRules","this","$rules","token","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","HighlightRules","CstyleBehaviour","CStyleFoldMode","$outdent","$behaviour","foldingRules","lineCommentStart","getNextLineIndent","state","tab","$id"],"mappings":"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","file":"static/js/62.00760bec.chunk.js","sourcesContent":["ace.define(\"ace/mode/jack_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JackHighlightRules = function JackHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"string\",\n        regex: '\"',\n        next: \"string2\"\n      }, {\n        token: \"string\",\n        regex: \"'\",\n        next: \"string1\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"-?0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"(?:0|[-+]?[1-9][0-9]*)\\\\b\"\n      }, {\n        token: \"constant.binary\",\n        regex: \"<[0-9A-Fa-f][0-9A-Fa-f](\\\\s+[0-9A-Fa-f][0-9A-Fa-f])*>\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: \"constant.language.null\",\n        regex: \"null\\\\b\"\n      }, {\n        token: \"storage.type\",\n        regex: \"(?:Integer|Boolean|Null|String|Buffer|Tuple|List|Object|Function|Coroutine|Form)\\\\b\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:return|abort|vars|for|delete|in|is|escape|exec|split|and|if|elif|else|while)\\\\b\"\n      }, {\n        token: \"language.builtin\",\n        regex: \"(?:lines|source|parse|read-stream|interval|substr|parseint|write|print|range|rand|inspect|bind|i-values|i-pairs|i-map|i-filter|i-chunk|i-all\\\\?|i-any\\\\?|i-collect|i-zip|i-merge|i-each)\\\\b\"\n      }, {\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"storage.form\",\n        regex: \"@[a-z]+\"\n      }, {\n        token: \"constant.other.symbol\",\n        regex: ':+[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n      }, {\n        token: \"variable\",\n        regex: '[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\|\\\\||\\\\^\\\\^|&&|!=|==|<=|<|>=|>|\\\\+|-|\\\\*|\\\\/|\\\\^|\\\\%|\\\\#|\\\\!\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"string1\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: \"[^'\\\\\\\\]+\"\n      }, {\n        token: \"string\",\n        regex: \"'\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \"\",\n        next: \"start\"\n      }],\n      \"string2\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: '[^\"\\\\\\\\]+'\n      }, {\n        token: \"string\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \"\",\n        next: \"start\"\n      }]\n    };\n  };\n\n  oop.inherits(JackHighlightRules, TextHighlightRules);\n  exports.JackHighlightRules = JackHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/jack\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/jack_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var HighlightRules = acequire(\"./jack_highlight_rules\").JackHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\n  var CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/jack\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}