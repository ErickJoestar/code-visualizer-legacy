{"version":3,"sources":["../node_modules/brace/mode/lean.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","leanHighlightRules","keywordControls","join","nameProviders","storageType","storageModifiers","keywordOperators","keywordMapper","$keywords","createKeywordMapper","identifierRe","operatorRe","RegExp","stateName","embedRules","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","lineCommentStart","blockComment","end","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"mappings":"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","file":"static/js/72.ee4b4604.chunk.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function DocCommentHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/lean_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var leanHighlightRules = function leanHighlightRules() {\n    var keywordControls = [\"add_rewrite\", \"alias\", \"as\", \"assume\", \"attribute\", \"begin\", \"by\", \"calc\", \"calc_refl\", \"calc_subst\", \"calc_trans\", \"check\", \"classes\", \"coercions\", \"conjecture\", \"constants\", \"context\", \"corollary\", \"else\", \"end\", \"environment\", \"eval\", \"example\", \"exists\", \"exit\", \"export\", \"exposing\", \"extends\", \"fields\", \"find_decl\", \"forall\", \"from\", \"fun\", \"have\", \"help\", \"hiding\", \"if\", \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instances\", \"let\", \"local\", \"match\", \"namespace\", \"notation\", \"obtain\", \"obtains\", \"omit\", \"opaque\", \"open\", \"options\", \"parameter\", \"parameters\", \"postfix\", \"precedence\", \"prefix\", \"premise\", \"premises\", \"print\", \"private\", \"proof\", \"protected\", \"qed\", \"raw\", \"renaming\", \"section\", \"set_option\", \"show\", \"tactic_hint\", \"take\", \"then\", \"universe\", \"universes\", \"using\", \"variable\", \"variables\", \"with\"].join(\"|\");\n    var nameProviders = [\"inductive\", \"structure\", \"record\", \"theorem\", \"axiom\", \"axioms\", \"lemma\", \"hypothesis\", \"definition\", \"constant\"].join(\"|\");\n    var storageType = [\"Prop\", \"Type\", \"Type'\", \"Type₊\", \"Type₁\", \"Type₂\", \"Type₃\"].join(\"|\");\n    var storageModifiers = \"\\\\[(\" + [\"abbreviations\", \"all-transparent\", \"begin-end-hints\", \"class\", \"classes\", \"coercion\", \"coercions\", \"declarations\", \"decls\", \"instance\", \"irreducible\", \"multiple-instances\", \"notation\", \"notations\", \"parsing-only\", \"persistent\", \"reduce-hints\", \"reducible\", \"tactic-hints\", \"visible\", \"wf\", \"whnf\"].join(\"|\") + \")\\\\]\";\n    var keywordOperators = [].join(\"|\");\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n      \"keyword.control\": keywordControls,\n      \"storage.type\": storageType,\n      \"keyword.operator\": keywordOperators,\n      \"variable.language\": \"sorry\"\n    }, \"identifier\");\n    var identifierRe = \"[A-Za-z_\\u03B1-\\u03BA\\u03BC-\\u03FB\\u1F00-\\u1FFE\\u2100-\\u214F][A-Za-z0-9_'\\u03B1-\\u03BA\\u03BC-\\u03FB\\u1F00-\\u1FFE\\u2070-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2100-\\u214F]*\";\n    var operatorRe = new RegExp([\"#\", \"@\", \"->\", \"∼\", \"↔\", \"/\", \"==\", \"=\", \":=\", \"<->\", \"/\\\\\", \"\\\\/\", \"∧\", \"∨\", \"≠\", \"<\", \">\", \"≤\", \"≥\", \"¬\", \"<=\", \">=\", \"⁻¹\", \"⬝\", \"▸\", \"\\\\+\", \"\\\\*\", \"-\", \"/\", \"λ\", \"→\", \"∃\", \"∀\", \":=\"].join(\"|\"));\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        // single line comment \"--\"\n        regex: \"--.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment \"/-\"\n        regex: \"\\\\/-\",\n        next: \"comment\"\n      }, {\n        stateName: \"qqstring\",\n        token: \"string.start\",\n        regex: '\"',\n        next: [{\n          token: \"string.end\",\n          regex: '\"',\n          next: \"start\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\[n\"\\\\]/\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"keyword.control\",\n        regex: nameProviders,\n        next: [{\n          token: \"variable.language\",\n          regex: identifierRe,\n          next: \"start\"\n        }]\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n      }, {\n        token: \"storage.modifier\",\n        regex: storageModifiers\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"operator\",\n        regex: operatorRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        regex: \"-/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(leanHighlightRules, TextHighlightRules);\n  exports.leanHighlightRules = leanHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/lean\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/lean_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var leanHighlightRules = acequire(\"./lean_highlight_rules\").leanHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var Range = acequire(\"../range\").Range;\n\n  var Mode = function Mode() {\n    this.HighlightRules = leanHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"/-\",\n      end: \"-/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\") {\n          return \"\";\n        }\n\n        var match = line.match(/^\\s*(\\/?)\\*/);\n\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n\n          indent += \"- \";\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/lean\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}