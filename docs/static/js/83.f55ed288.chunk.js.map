{"version":3,"sources":["../node_modules/brace/mode/makefile.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","reservedKeywords","languageConstructs","ShHighlightRules","keywordMapper","this","createKeywordMapper","$rules","token","regex","push","include","next","defaultToken","stateName","onMatch","value","currentState","stack","tokens","split","splitRegex","type","rules","heredoc","shift","indentedHeredoc","start","end","integer","variables","normalizeRules","inherits","ShHighlightFile","MakefileHighlightRules","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$indentWithTabs","$id"],"mappings":"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","file":"static/js/83.f55ed288.chunk.js","sourcesContent":["ace.define(\"ace/mode/sh_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var reservedKeywords = exports.reservedKeywords = '!|{|}|case|do|done|elif|else|' + 'esac|fi|for|if|in|then|until|while|' + '&|;|export|local|read|typeset|unset|' + 'elif|select|set|function|declare|readonly';\n  var languageConstructs = exports.languageConstructs = '[|]|alias|bg|bind|break|builtin|' + 'cd|command|compgen|complete|continue|' + 'dirs|disown|echo|enable|eval|exec|' + 'exit|fc|fg|getopts|hash|help|history|' + 'jobs|kill|let|logout|popd|printf|pushd|' + 'pwd|return|set|shift|shopt|source|' + 'suspend|test|times|trap|type|ulimit|' + 'umask|unalias|wait';\n\n  var ShHighlightRules = function ShHighlightRules() {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": reservedKeywords,\n      \"support.function.builtin\": languageConstructs,\n      \"invalid.deprecated\": \"debugger\"\n    }, \"identifier\");\n    var integer = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var fileDescriptor = \"(?:&\" + intPart + \")\";\n    var variableName = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n    var variable = \"(?:\" + variableName + \"(?==))\";\n    var builtinVariable = \"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";\n    var func = \"(?:\" + variableName + \"\\\\s*\\\\(\\\\))\";\n    this.$rules = {\n      \"start\": [{\n        token: \"constant\",\n        regex: /\\\\./\n      }, {\n        token: [\"text\", \"comment\"],\n        regex: /(^|\\s)(#.*)$/\n      }, {\n        token: \"string.start\",\n        regex: '\"',\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[$`\"\\\\]|$)/\n        }, {\n          include: \"variables\"\n        }, {\n          token: \"keyword.operator\",\n          regex: /`/ // TODO highlight `\n\n        }, {\n          token: \"string.end\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: \"\\\\$'\",\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n        }, {\n          token: \"string\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        regex: \"<<<\",\n        token: \"keyword.operator\"\n      }, {\n        stateName: \"heredoc\",\n        regex: \"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",\n        onMatch: function onMatch(value, currentState, stack) {\n          var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n          var tokens = value.split(this.splitRegex);\n          stack.push(next, tokens[4]);\n          return [{\n            type: \"constant\",\n            value: tokens[1]\n          }, {\n            type: \"text\",\n            value: tokens[2]\n          }, {\n            type: \"string\",\n            value: tokens[3]\n          }, {\n            type: \"support.class\",\n            value: tokens[4]\n          }, {\n            type: \"string\",\n            value: tokens[5]\n          }];\n        },\n        rules: {\n          heredoc: [{\n            onMatch: function onMatch(value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }],\n          indentedHeredoc: [{\n            token: \"string\",\n            regex: \"^\\t+\"\n          }, {\n            onMatch: function onMatch(value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }]\n        }\n      }, {\n        regex: \"$\",\n        token: \"empty\",\n        next: function next(currentState, stack) {\n          if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\") return stack[0];\n          return currentState;\n        }\n      }, {\n        token: [\"keyword\", \"text\", \"text\", \"text\", \"variable\"],\n        regex: /(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/\n      }, {\n        token: \"variable.language\",\n        regex: builtinVariable\n      }, {\n        token: \"variable\",\n        regex: variable\n      }, {\n        include: \"variables\"\n      }, {\n        token: \"support.function\",\n        regex: func\n      }, {\n        token: \"support.function\",\n        regex: fileDescriptor\n      }, {\n        token: \"string\",\n        // ' string\n        start: \"'\",\n        end: \"'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \";\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\)\\\\}]\",\n        next: \"pop\"\n      }],\n      variables: [{\n        token: \"variable\",\n        regex: /(\\$)(\\w+)/\n      }, {\n        token: [\"variable\", \"paren.lparen\"],\n        regex: /(\\$)(\\()/,\n        push: \"start\"\n      }, {\n        token: [\"variable\", \"paren.lparen\", \"keyword.operator\", \"variable\", \"keyword.operator\"],\n        regex: /(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,\n        push: \"start\"\n      }, {\n        token: \"variable\",\n        regex: /\\$[*@#?\\-$!0_]/\n      }, {\n        token: [\"variable\", \"paren.lparen\"],\n        regex: /(\\$)(\\{)/,\n        push: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(ShHighlightRules, TextHighlightRules);\n  exports.ShHighlightRules = ShHighlightRules;\n});\nace.define(\"ace/mode/makefile_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/sh_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var ShHighlightFile = acequire(\"./sh_highlight_rules\");\n\n  var MakefileHighlightRules = function MakefileHighlightRules() {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": ShHighlightFile.reservedKeywords,\n      \"support.function.builtin\": ShHighlightFile.languageConstructs,\n      \"invalid.deprecated\": \"debugger\"\n    }, \"string\");\n    this.$rules = {\n      \"start\": [{\n        token: \"string.interpolated.backtick.makefile\",\n        regex: \"`\",\n        next: \"shell-start\"\n      }, {\n        token: \"punctuation.definition.comment.makefile\",\n        regex: /#(?=.)/,\n        next: \"comment\"\n      }, {\n        token: [\"keyword.control.makefile\"],\n        regex: \"^(?:\\\\s*\\\\b)(\\\\-??include|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)(?:\\\\b)\"\n      }, {\n        // ^([^\\t ]+(\\s[^\\t ]+)*:(?!\\=))\\s*.*\n        token: [\"entity.name.function.makefile\", \"text\"],\n        regex: \"^([^\\\\t ]+(?:\\\\s[^\\\\t ]+)*:)(\\\\s*.*)\"\n      }],\n      \"comment\": [{\n        token: \"punctuation.definition.comment.makefile\",\n        regex: /.+\\\\/\n      }, {\n        token: \"punctuation.definition.comment.makefile\",\n        regex: \".+\",\n        next: \"start\"\n      }],\n      \"shell-start\": [{\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\w+\"\n      }, {\n        token: \"string.interpolated.backtick.makefile\",\n        regex: \"`\",\n        next: \"start\"\n      }]\n    };\n  };\n\n  oop.inherits(MakefileHighlightRules, TextHighlightRules);\n  exports.MakefileHighlightRules = MakefileHighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var Range = acequire(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/makefile\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/makefile_highlight_rules\", \"ace/mode/folding/coffee\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var MakefileHighlightRules = acequire(\"./makefile_highlight_rules\").MakefileHighlightRules;\n  var FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = MakefileHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$indentWithTabs = true;\n    this.$id = \"ace/mode/makefile\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}