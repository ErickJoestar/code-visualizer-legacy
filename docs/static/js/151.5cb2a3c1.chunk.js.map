{"version":3,"sources":["../node_modules/brace/mode/xml.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","XmlHighlightRules","normalize","tagRegex","this","$rules","start","token","regex","next","caseInsensitive","include","defaultToken","processing_instruction","doctype","push","int_subset","cdata","comment","reference","attr_reference","tag","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","normalizeRules","embedTagRules","HighlightRules","prefix","unshift","onMatch","value","currentState","stack","splice","embedRules","call","prototype","inherits","Behaviour","TokenIterator","is","type","lastIndexOf","XmlBehaviour","add","state","action","editor","session","text","quote","selected","doc","getTextRange","getSelectionRange","getWrapBehavioursEnabled","selection","cursor","getCursorPosition","rightChar","getLine","row","substring","column","iterator","getCurrentToken","stepBackward","rightSpace","match","range","isMultiLine","end","position","firstChar","charAt","lastChar","length","tokenEnd","getCurrentTokenColumn","stepForward","tokenRow","getCurrentTokenRow","tokenColumn","element","voidElements","hasOwnProperty","toLowerCase","line","indexOf","nextToken","getTokenAt","nextIndent","$getIndent","indent","getTabString","Range","BaseFoldMode","FoldMode","optionalEndTags","mixin","Tag","tagName","closing","selfClosing","getFoldWidget","foldStyle","_getFirstTagInLine","_findEndTagInLine","getCommentFoldWidget","test","getState","tokens","getTokens","i","startColumn","_readTagForward","_readTagBackward","_pop","top","pop","getFoldWidgetRange","firstTag","getCommentFoldRange","fromPoints","lang","TextMode","Mode","XmlFoldMode","WorkerClient","$behaviour","foldingRules","arrayToMap","blockComment","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id"],"mappings":"iIAAAA,IAAIC,OAAO,+BAAgC,CAAC,UAAW,UAAW,SAAU,cAAe,kCAAkC,SAAUC,EAAUC,EAASC,GACxJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAoB,SAASA,EAAkBC,GACjD,IAAIC,EAAW,mDACfC,KAAKC,OAAS,CACZC,MAAO,CAAC,CACNC,MAAO,mBACPC,MAAO,kBACPC,KAAM,SACL,CACDF,MAAO,CAAC,8BAA+B,2BACvCC,MAAO,UAAYL,EAAW,IAC9BM,KAAM,0BACL,CACDF,MAAO,oBACPC,MAAO,SACPC,KAAM,WACL,CACDF,MAAO,CAAC,qBAAsB,sBAC9BC,MAAO,2BACPC,KAAM,UACNC,iBAAiB,GAChB,CACDC,QAAS,OACR,CACDJ,MAAO,wBACPC,MAAO,MACN,CACDD,MAAO,oBACPC,MAAO,KACN,CACDG,QAAS,aACR,CACDC,aAAc,aAEhBC,uBAAwB,CAAC,CACvBN,MAAO,sDACPC,MAAOL,GACN,CACDI,MAAO,6CACPC,MAAO,KACN,CACDG,QAAS,cACR,CACDA,QAAS,UACR,CACDJ,MAAO,2BACPC,MAAO,OACPC,KAAM,UAERK,QAAS,CAAC,CACRH,QAAS,cACR,CACDA,QAAS,UACR,CACDJ,MAAO,qBACPC,MAAO,IACPC,KAAM,SACL,CACDF,MAAO,aACPC,MAAO,mBACN,CACDD,MAAO,yBACPC,MAAO,MACPO,KAAM,eAERC,WAAY,CAAC,CACXT,MAAO,WACPC,MAAO,QACN,CACDD,MAAO,6BACPC,MAAO,IACPC,KAAM,OACL,CACDF,MAAO,CAAC,8BAA+B,2BACvCC,MAAO,UAAYL,EAAW,IAC9BY,KAAM,CAAC,CACLR,MAAO,OACPC,MAAO,QACN,CACDD,MAAO,8BACPC,MAAO,IACPC,KAAM,OACL,CACDE,QAAS,aAGbM,MAAO,CAAC,CACNV,MAAO,mBACPC,MAAO,UACPC,KAAM,SACL,CACDF,MAAO,WACPC,MAAO,QACN,CACDD,MAAO,WACPC,MAAO,4BAETU,QAAS,CAAC,CACRX,MAAO,kBACPC,MAAO,SACPC,KAAM,SACL,CACDG,aAAc,gBAEhBO,UAAW,CAAC,CACVZ,MAAO,yCACPC,MAAO,gEAETY,eAAgB,CAAC,CACfb,MAAO,yDACPC,MAAO,gEAETa,IAAK,CAAC,CACJd,MAAO,CAAC,oCAAqC,wCAAyC,yBACtFC,MAAO,mBAAqBL,EAAW,MAAQA,EAAW,IAC1DM,KAAM,CAAC,CACLE,QAAS,cACR,CACDJ,MAAO,qCACPC,MAAO,MACPC,KAAM,YAGVa,eAAgB,CAAC,CACff,MAAO,0BACPC,MAAO,SAETe,WAAY,CAAC,CACXhB,MAAO,sBACPC,MAAO,SAETgB,OAAQ,CAAC,CACPjB,MAAO,aACPC,MAAO,IACPO,KAAM,CAAC,CACLR,MAAO,aACPC,MAAO,IACPC,KAAM,OACL,CACDG,aAAc,gBAEf,CACDL,MAAO,aACPC,MAAO,IACPO,KAAM,CAAC,CACLR,MAAO,aACPC,MAAO,IACPC,KAAM,OACL,CACDG,aAAc,iBAGlBa,WAAY,CAAC,CACXlB,MAAO,kCACPC,MAAOL,GACN,CACDI,MAAO,wCACPC,MAAO,KACN,CACDG,QAAS,kBACR,CACDA,QAAS,oBAEXe,gBAAiB,CAAC,CAChBnB,MAAO,6BACPC,MAAO,IACPO,KAAM,CAAC,CACLR,MAAO,6BACPC,MAAO,IACPC,KAAM,OACL,CACDE,QAAS,kBACR,CACDC,aAAc,gCAEf,CACDL,MAAO,6BACPC,MAAO,IACPO,KAAM,CAAC,CACLR,MAAO,6BACPC,MAAO,IACPC,KAAM,OACL,CACDE,QAAS,kBACR,CACDC,aAAc,kCAIhBR,KAAKuB,cAAgB1B,GAAmBG,KAAKwB,mBAGnD,WACExB,KAAKyB,cAAgB,SAAUC,EAAgBC,EAAQV,GACrDjB,KAAKC,OAAOgB,IAAIW,QAAQ,CACtBzB,MAAO,CAAC,oCAAqC,YAAcc,EAAM,iBACjEb,MAAO,OAASa,EAAM,eACtBZ,KAAM,CAAC,CACLE,QAAS,cACR,CACDJ,MAAO,qCACPC,MAAO,MACPC,KAAMsB,EAAS,YAGnB3B,KAAKC,OAAOgB,EAAM,QAAU,CAAC,CAC3BV,QAAS,cACR,CACDJ,MAAO,qCACPC,MAAO,MACPC,KAAM,QACNwB,QAAS,SAAiBC,EAAOC,EAAcC,GAE7C,OADAA,EAAMC,OAAO,GACNjC,KAAKG,SAGhBH,KAAKkC,WAAWR,EAAgBC,EAAQ,CAAC,CACvCxB,MAAO,CAAC,wCAAyC,YAAcc,EAAM,iBACrEb,MAAO,QAAUa,EAAM,eACvBZ,KAAMY,EAAM,QACX,CACDd,MAAO,mBACPC,MAAO,mBACN,CACDD,MAAO,mBACPC,MAAO,gBAGV+B,KAAKvC,EAAmBwC,WAC3BzC,EAAI0C,SAASxC,EAAmBD,GAChCH,EAAQI,kBAAoBA,KAE9BP,IAAIC,OAAO,yBAA0B,CAAC,UAAW,UAAW,SAAU,cAAe,qBAAsB,qBAAsB,iBAAiB,SAAUC,EAAUC,EAASC,GAC7K,aAEA,IAAIC,EAAMH,EAAS,iBACf8C,EAAY9C,EAAS,gBAAgB8C,UACrCC,EAAgB/C,EAAS,wBAAwB+C,cAC1C/C,EAAS,kBAEpB,SAASgD,EAAGrC,EAAOsC,GACjB,OAAOtC,EAAMsC,KAAKC,YAAYD,EAAO,SAAW,EAGlD,IAAIE,EAAe,WACjB3C,KAAK4C,IAAI,iBAAkB,aAAa,SAAUC,EAAOC,EAAQC,EAAQC,EAASC,GAChF,GAAY,KAARA,GAAuB,KAARA,EAAa,CAC9B,IAAIC,EAAQD,EACRE,EAAWH,EAAQI,IAAIC,aAAaN,EAAOO,qBAE/C,GAAiB,KAAbH,GAAgC,MAAbA,GAAgC,KAAZA,GAAmBJ,EAAOQ,2BACnE,MAAO,CACLN,KAAMC,EAAQC,EAAWD,EACzBM,WAAW,GAIf,IAAIC,EAASV,EAAOW,oBAEhBC,EADOX,EAAQI,IAAIQ,QAAQH,EAAOI,KACjBC,UAAUL,EAAOM,OAAQN,EAAOM,OAAS,GAC1DC,EAAW,IAAIzB,EAAcS,EAASS,EAAOI,IAAKJ,EAAOM,QACzD5D,EAAQ6D,EAASC,kBAErB,GAAIN,GAAaT,IAAUV,EAAGrC,EAAO,oBAAsBqC,EAAGrC,EAAO,WACnE,MAAO,CACL8C,KAAM,GACNO,UAAW,CAAC,EAAG,IAKnB,GADKrD,IAAOA,EAAQ6D,EAASE,iBACxB/D,EAAO,OAEZ,KAAOqC,EAAGrC,EAAO,mBAAqBqC,EAAGrC,EAAO,eAC9CA,EAAQ6D,EAASE,eAGnB,IAAIC,GAAcR,GAAaA,EAAUS,MAAM,MAE/C,GAAI5B,EAAGrC,EAAO,sBAAwBgE,GAA2B,KAAbR,IAAqBnB,EAAGrC,EAAO,2BAA6BgE,GAA2B,KAAbR,GAC5H,MAAO,CACLV,KAAMC,EAAQA,EACdM,UAAW,CAAC,EAAG,QAKvBxD,KAAK4C,IAAI,iBAAkB,YAAY,SAAUC,EAAOC,EAAQC,EAAQC,EAASqB,GAC/E,IAAIlB,EAAWH,EAAQI,IAAIC,aAAagB,GAExC,IAAKA,EAAMC,gBAA8B,KAAZnB,GAA+B,KAAZA,IACnCH,EAAQI,IAAIQ,QAAQS,EAAMnE,MAAM2D,KACtBC,UAAUO,EAAMnE,MAAM6D,OAAS,EAAGM,EAAMnE,MAAM6D,OAAS,IAE3DZ,EAEf,OADAkB,EAAME,IAAIR,SACHM,KAIbrE,KAAK4C,IAAI,cAAe,aAAa,SAAUC,EAAOC,EAAQC,EAAQC,EAASC,GAC7E,GAAY,KAARA,EAAa,CACf,IAAIuB,EAAWzB,EAAOO,oBAAoBpD,MACtC8D,EAAW,IAAIzB,EAAcS,EAASwB,EAASX,IAAKW,EAAST,QAC7D5D,EAAQ6D,EAASC,mBAAqBD,EAASE,eACnD,IAAK/D,KAAWqC,EAAGrC,EAAO,aAAeqC,EAAGrC,EAAO,mBAAqBqC,EAAGrC,EAAO,mBAAqBqC,EAAGrC,EAAO,qBAAuBqC,EAAGrC,EAAO,oBAAqB,OACvK,GAAIqC,EAAGrC,EAAO,6BAA8B,OAE5C,GAAIqC,EAAGrC,EAAO,mBAAoB,CAChC,IAAIsE,EAAYtE,EAAM2B,MAAM4C,OAAO,GAEnC,GAAiB,KAAbD,GAAiC,KAAbA,EAAkB,CACxC,IAAIE,EAAWxE,EAAM2B,MAAM4C,OAAOvE,EAAM2B,MAAM8C,OAAS,GACnDC,EAAWb,EAASc,wBAA0B3E,EAAM2B,MAAM8C,OAC9D,GAAIC,EAAWL,EAAST,QAAUc,GAAYL,EAAST,QAAUU,GAAaE,EAAU,QAI5F,MAAQnC,EAAGrC,EAAO,aAGhB,GAAmB,MAFnBA,EAAQ6D,EAASE,gBAEPpC,MAAc,CACtB3B,EAAQ6D,EAASe,cACjB,MAIJ,IAAIC,EAAWhB,EAASiB,qBACpBC,EAAclB,EAASc,wBAC3B,GAAItC,EAAGwB,EAASE,eAAgB,gBAAiB,OACjD,IAAIiB,EAAUhF,EAAM2B,MAEpB,GADIkD,GAAYR,EAASX,MAAKsB,EAAUA,EAAQrB,UAAU,EAAGU,EAAST,OAASmB,IAC3ElF,KAAKoF,aAAaC,eAAeF,EAAQG,eAAgB,OAC7D,MAAO,CACLrC,KAAM,MAAakC,EAAU,IAC7B3B,UAAW,CAAC,EAAG,QAIrBxD,KAAK4C,IAAI,aAAc,aAAa,SAAUC,EAAOC,EAAQC,EAAQC,EAASC,GAC5E,GAAY,MAARA,EAAc,CAChB,IAAIQ,EAASV,EAAOW,oBAChB6B,EAAOvC,EAAQY,QAAQH,EAAOI,KAC9BG,EAAW,IAAIzB,EAAcS,EAASS,EAAOI,IAAKJ,EAAOM,QACzD5D,EAAQ6D,EAASC,kBAErB,GAAI9D,IAA8C,IAArCA,EAAMsC,KAAK+C,QAAQ,aAAqB,CACnD,GAAmB,MAAfrF,EAAM2B,MAAe,OAEzB,KAAO3B,IAA6C,IAApCA,EAAMsC,KAAK+C,QAAQ,aACjCrF,EAAQ6D,EAASE,eAGnB,IAAK/D,EACH,OAGF,IAAIc,EAAMd,EAAM2B,MACZ+B,EAAMG,EAASiB,qBAGnB,KAFA9E,EAAQ6D,EAASE,kBAEgC,IAAnC/D,EAAMsC,KAAK+C,QAAQ,WAC/B,OAGF,GAAIxF,KAAKoF,eAAiBpF,KAAKoF,aAAanE,GAAM,CAChD,IAAIwE,EAAYzC,EAAQ0C,WAAWjC,EAAOI,IAAKJ,EAAOM,OAAS,GAE3D4B,GADAJ,EAAOvC,EAAQY,QAAQC,GACV7D,KAAK4F,WAAWL,IAC7BM,EAASF,EAAa3C,EAAQ8C,eAElC,OAAIL,GAAiC,OAApBA,EAAU3D,MAClB,CACLmB,KAAM,KAAO4C,EAAS,KAAOF,EAC7BnC,UAAW,CAAC,EAAGqC,EAAOjB,OAAQ,EAAGiB,EAAOjB,SAGnC,CACL3B,KAAM,KAAO4C,UAS3BlG,EAAI0C,SAASM,EAAcL,GAC3B7C,EAAQkD,aAAeA,KAEzBrD,IAAIC,OAAO,uBAAwB,CAAC,UAAW,UAAW,SAAU,cAAe,eAAgB,YAAa,6BAA8B,uBAAuB,SAAUC,EAAUC,EAASC,GAChM,aAEA,IAAIC,EAAMH,EAAS,iBAEfuG,GADOvG,EAAS,kBACRA,EAAS,eAAeuG,OAChCC,EAAexG,EAAS,eAAeyG,SACvC1D,EAAgB/C,EAAS,wBAAwB+C,cAEjD0D,EAAWxG,EAAQwG,SAAW,SAAUb,EAAcc,GACxDF,EAAa7D,KAAKnC,MAClBA,KAAKoF,aAAeA,GAAgB,GACpCpF,KAAKkG,gBAAkBvG,EAAIwG,MAAM,GAAInG,KAAKoF,cACtCc,GAAiBvG,EAAIwG,MAAMnG,KAAKkG,gBAAiBA,IAGvDvG,EAAI0C,SAAS4D,EAAUD,GAEvB,IAAII,EAAM,WACRpG,KAAKqG,QAAU,GACfrG,KAAKsG,SAAU,EACftG,KAAKuG,aAAc,EACnBvG,KAAKE,MAAQ,CACX2D,IAAK,EACLE,OAAQ,GAEV/D,KAAKuE,IAAM,CACTV,IAAK,EACLE,OAAQ,IAIZ,SAASvB,EAAGrC,EAAOsC,GACjB,OAAOtC,EAAMsC,KAAKC,YAAYD,EAAO,SAAW,GAGlD,WACEzC,KAAKwG,cAAgB,SAAUxD,EAASyD,EAAW5C,GACjD,IAAI5C,EAAMjB,KAAK0G,mBAAmB1D,EAASa,GAE3C,OAAK5C,EACDA,EAAIqF,UAAYrF,EAAIoF,SAAWpF,EAAIsF,YAAiC,gBAAbE,EAA8B,MAAQ,IAC5FxF,EAAIoF,SAAWpF,EAAIsF,aAAevG,KAAKoF,aAAaC,eAAepE,EAAIoF,QAAQf,eAAuB,GACvGtF,KAAK2G,kBAAkB3D,EAASa,EAAK5C,EAAIoF,QAASpF,EAAIsD,IAAIR,QAAgB,GACvE,QAJU/D,KAAK4G,qBAAqB5D,EAASa,IAOtD7D,KAAK4G,qBAAuB,SAAU5D,EAASa,GAC7C,MAAI,UAAUgD,KAAK7D,EAAQ8D,SAASjD,KAAS,MAAMgD,KAAK7D,EAAQY,QAAQC,IAAc,QAC/E,IAGT7D,KAAK0G,mBAAqB,SAAU1D,EAASa,GAI3C,IAHA,IAAIkD,EAAS/D,EAAQgE,UAAUnD,GAC3B5C,EAAM,IAAImF,EAELa,EAAI,EAAGA,EAAIF,EAAOnC,OAAQqC,IAAK,CACtC,IAAI9G,EAAQ4G,EAAOE,GAEnB,GAAIzE,EAAGrC,EAAO,YAAa,CAIzB,GAHAc,EAAIsD,IAAIR,OAAS9C,EAAIf,MAAM6D,OAAS5D,EAAM2B,MAAM8C,OAChD3D,EAAIqF,QAAU9D,EAAGrC,EAAO,kBACxBA,EAAQ4G,IAASE,IACL,OAAO,KAInB,IAHAhG,EAAIoF,QAAUlG,EAAM2B,MACpBb,EAAIsD,IAAIR,QAAU5D,EAAM2B,MAAM8C,OAEzBqC,IAAKA,EAAIF,EAAOnC,OAAQqC,IAI3B,GAHA9G,EAAQ4G,EAAOE,GACfhG,EAAIsD,IAAIR,QAAU5D,EAAM2B,MAAM8C,OAE1BpC,EAAGrC,EAAO,aAAc,CAC1Bc,EAAIsF,YAA6B,MAAfpG,EAAM2B,MACxB,MAIJ,OAAOb,EACF,GAAIuB,EAAGrC,EAAO,aAEnB,OADAc,EAAIsF,YAA6B,MAAfpG,EAAM2B,MACjBb,EAGTA,EAAIf,MAAM6D,QAAU5D,EAAM2B,MAAM8C,OAGlC,OAAO,MAGT5E,KAAK2G,kBAAoB,SAAU3D,EAASa,EAAKwC,EAASa,GAIxD,IAHA,IAAIH,EAAS/D,EAAQgE,UAAUnD,GAC3BE,EAAS,EAEJkD,EAAI,EAAGA,EAAIF,EAAOnC,OAAQqC,IAAK,CACtC,IAAI9G,EAAQ4G,EAAOE,GAEnB,MADAlD,GAAU5D,EAAM2B,MAAM8C,QACTsC,IAET1E,EAAGrC,EAAO,kBACZA,EAAQ4G,EAAOE,EAAI,KACN9G,EAAM2B,OAASuE,EAAS,OAAO,EAIhD,OAAO,GAGTrG,KAAKmH,gBAAkB,SAAUnD,GAC/B,IAAI7D,EAAQ6D,EAASC,kBACrB,IAAK9D,EAAO,OAAO,KACnB,IAAIc,EAAM,IAAImF,EAEd,GACE,GAAI5D,EAAGrC,EAAO,YACZc,EAAIqF,QAAU9D,EAAGrC,EAAO,gBACxBc,EAAIf,MAAM2D,IAAMG,EAASiB,qBACzBhE,EAAIf,MAAM6D,OAASC,EAASc,6BACvB,GAAItC,EAAGrC,EAAO,YACnBc,EAAIoF,QAAUlG,EAAM2B,WACf,GAAIU,EAAGrC,EAAO,aAKnB,OAJAc,EAAIsF,YAA6B,MAAfpG,EAAM2B,MACxBb,EAAIsD,IAAIV,IAAMG,EAASiB,qBACvBhE,EAAIsD,IAAIR,OAASC,EAASc,wBAA0B3E,EAAM2B,MAAM8C,OAChEZ,EAASe,cACF9D,QAEFd,EAAQ6D,EAASe,eAE1B,OAAO,MAGT/E,KAAKoH,iBAAmB,SAAUpD,GAChC,IAAI7D,EAAQ6D,EAASC,kBACrB,IAAK9D,EAAO,OAAO,KACnB,IAAIc,EAAM,IAAImF,EAEd,EAAG,CACD,GAAI5D,EAAGrC,EAAO,YAKZ,OAJAc,EAAIqF,QAAU9D,EAAGrC,EAAO,gBACxBc,EAAIf,MAAM2D,IAAMG,EAASiB,qBACzBhE,EAAIf,MAAM6D,OAASC,EAASc,wBAC5Bd,EAASE,eACFjD,EACEuB,EAAGrC,EAAO,YACnBc,EAAIoF,QAAUlG,EAAM2B,MACXU,EAAGrC,EAAO,eACnBc,EAAIsF,YAA6B,MAAfpG,EAAM2B,MACxBb,EAAIsD,IAAIV,IAAMG,EAASiB,qBACvBhE,EAAIsD,IAAIR,OAASC,EAASc,wBAA0B3E,EAAM2B,MAAM8C,cAE3DzE,EAAQ6D,EAASE,gBAE1B,OAAO,MAGTlE,KAAKqH,KAAO,SAAUrF,EAAOf,GAC3B,KAAOe,EAAM4C,QAAQ,CACnB,IAAI0C,EAAMtF,EAAMA,EAAM4C,OAAS,GAE/B,GAAK3D,GAAOqG,EAAIjB,SAAWpF,EAAIoF,QAExB,IAAIrG,KAAKkG,gBAAgBb,eAAeiC,EAAIjB,SAAU,CAC3DrE,EAAMuF,MACN,SAEA,OAAO,KALP,OAAOvF,EAAMuF,QAUnBvH,KAAKwH,mBAAqB,SAAUxE,EAASyD,EAAW5C,GACtD,IAAI4D,EAAWzH,KAAK0G,mBAAmB1D,EAASa,GAEhD,IAAK4D,EACH,OAAOzH,KAAK4G,qBAAqB5D,EAASa,IAAQb,EAAQ0E,oBAAoB7D,EAAKb,EAAQY,QAAQC,GAAKe,QAG1G,IAEI3D,EADAe,EAAQ,GAGZ,GAJiByF,EAASnB,SAAWmB,EAASlB,YA8B5C,CAAIvC,EAAW,IAAIzB,EAAcS,EAASa,EAAK4D,EAASlD,IAAIR,QAM5D,IANA,IACIQ,EAAM,CACRV,IAAKA,EACLE,OAAQ0D,EAASvH,MAAM6D,QAGlB9C,EAAMjB,KAAKoH,iBAAiBpD,IAAW,CAC5C,GAAI/C,EAAIsF,YAAa,CACnB,GAAKvE,EAAM4C,OAIJ,SADL,OAFA3D,EAAIf,MAAM6D,QAAU9C,EAAIoF,QAAQzB,OAAS,EACzC3D,EAAIsD,IAAIR,QAAU,EACXgC,EAAM4B,WAAW1G,EAAIf,MAAOe,EAAIsD,KAI3C,GAAKtD,EAAIqF,QASPtE,EAAMrB,KAAKM,QANX,GAFAjB,KAAKqH,KAAKrF,EAAOf,GAEG,GAAhBe,EAAM4C,OAGR,OAFA3D,EAAIf,MAAM6D,QAAU9C,EAAIoF,QAAQzB,OAAS,EACrC3D,EAAIf,MAAM2D,KAAO5C,EAAIsD,IAAIV,KAAO5C,EAAIf,MAAM6D,OAAS9C,EAAIsD,IAAIR,SAAQ9C,EAAIf,MAAM6D,OAAS9C,EAAIsD,IAAIR,QAC3FgC,EAAM4B,WAAW1G,EAAIf,MAAOqE,QA/C1B,CACf,IAAIP,EAAW,IAAIzB,EAAcS,EAASa,EAAK4D,EAASvH,MAAM6D,QAC1D7D,EAAQ,CACV2D,IAAKA,EACLE,OAAQ0D,EAASvH,MAAM6D,OAAS0D,EAASpB,QAAQzB,OAAS,GAI5D,IAFI6C,EAASvH,MAAM2D,KAAO4D,EAASlD,IAAIV,MAAK3D,EAAM6D,OAAS0D,EAASlD,IAAIR,QAEjE9C,EAAMjB,KAAKmH,gBAAgBnD,IAAW,CAC3C,GAAI/C,EAAIsF,YAAa,CACnB,GAAKvE,EAAM4C,OAIJ,SADL,OAFA3D,EAAIf,MAAM6D,QAAU9C,EAAIoF,QAAQzB,OAAS,EACzC3D,EAAIsD,IAAIR,QAAU,EACXgC,EAAM4B,WAAW1G,EAAIf,MAAOe,EAAIsD,KAI3C,GAAItD,EAAIqF,SAGN,GAFAtG,KAAKqH,KAAKrF,EAAOf,GAEG,GAAhBe,EAAM4C,OAAa,OAAOmB,EAAM4B,WAAWzH,EAAOe,EAAIf,YAE1D8B,EAAMrB,KAAKM,QAiClBkB,KAAK8D,EAAS7D,cAEnB9C,IAAIC,OAAO,eAAgB,CAAC,UAAW,UAAW,SAAU,cAAe,eAAgB,gBAAiB,+BAAgC,yBAA0B,uBAAwB,6BAA6B,SAAUC,EAAUC,EAASC,GACtP,aAEA,IAAIC,EAAMH,EAAS,cACfoI,EAAOpI,EAAS,eAChBqI,EAAWrI,EAAS,UAAUsI,KAC9BjI,EAAoBL,EAAS,yBAAyBK,kBACtD8C,EAAenD,EAAS,mBAAmBmD,aAC3CoF,EAAcvI,EAAS,iBAAiByG,SACxC+B,EAAexI,EAAS,2BAA2BwI,aAEnDF,EAAO,WACT9H,KAAK0B,eAAiB7B,EACtBG,KAAKiI,WAAa,IAAItF,EACtB3C,KAAKkI,aAAe,IAAIH,GAG1BpI,EAAI0C,SAASyF,EAAMD,GACnB,WACE7H,KAAKoF,aAAewC,EAAKO,WAAW,IACpCnI,KAAKoI,aAAe,CAClBlI,MAAO,UACPqE,IAAK,UAGPvE,KAAKqI,aAAe,SAAUrF,GAC5B,IAAIsF,EAAS,IAAIN,EAAa,CAAC,OAAQ,EAAQ,KAAkB,UAQjE,OAPAM,EAAOC,iBAAiBvF,EAAQwF,eAChCF,EAAOG,GAAG,SAAS,SAAUC,GAC3B1F,EAAQ2F,eAAeD,EAAEE,SAE3BN,EAAOG,GAAG,aAAa,WACrBzF,EAAQ6F,sBAEHP,GAGTtI,KAAK8I,IAAM,gBACV3G,KAAK2F,EAAK1F,WACb3C,EAAQqI,KAAOA","file":"static/js/151.5cb2a3c1.chunk.js","sourcesContent":["ace.define(\"ace/mode/xml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var XmlHighlightRules = function XmlHighlightRules(normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xC0-\\uFFFF][-_:.a-zA-Z0-9\\xC0-\\uFFFF]*\";\n    this.$rules = {\n      start: [{\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\",\n        next: \"cdata\"\n      }, {\n        token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n        regex: \"(<\\\\?)(\" + tagRegex + \")\",\n        next: \"processing_instruction\"\n      }, {\n        token: \"comment.start.xml\",\n        regex: \"<\\\\!--\",\n        next: \"comment\"\n      }, {\n        token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n        regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\",\n        next: \"doctype\",\n        caseInsensitive: true\n      }, {\n        include: \"tag\"\n      }, {\n        token: \"text.end-tag-open.xml\",\n        regex: \"</\"\n      }, {\n        token: \"text.tag-open.xml\",\n        regex: \"<\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"text.xml\"\n      }],\n      processing_instruction: [{\n        token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.decl-attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"punctuation.xml-decl.xml\",\n        regex: \"\\\\?>\",\n        next: \"start\"\n      }],\n      doctype: [{\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"xml-pe.doctype.xml\",\n        regex: \">\",\n        next: \"start\"\n      }, {\n        token: \"xml-pe.xml\",\n        regex: \"[-_a-zA-Z0-9:]+\"\n      }, {\n        token: \"punctuation.int-subset\",\n        regex: \"\\\\[\",\n        push: \"int_subset\"\n      }],\n      int_subset: [{\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.int-subset.xml\",\n        regex: \"]\",\n        next: \"pop\"\n      }, {\n        token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n        regex: \"(<\\\\!)(\" + tagRegex + \")\",\n        push: [{\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"punctuation.markup-decl.xml\",\n          regex: \">\",\n          next: \"pop\"\n        }, {\n          include: \"string\"\n        }]\n      }],\n      cdata: [{\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\",\n        next: \"start\"\n      }, {\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"text.xml\",\n        regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"\n      }],\n      comment: [{\n        token: \"comment.end.xml\",\n        regex: \"-->\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.xml\"\n      }],\n      reference: [{\n        token: \"constant.language.escape.reference.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      attr_reference: [{\n        token: \"constant.language.escape.reference.attribute-value.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      tag: [{\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n        regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: \"start\"\n        }]\n      }],\n      tag_whitespace: [{\n        token: \"text.tag-whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      whitespace: [{\n        token: \"text.whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      string: [{\n        token: \"string.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }, {\n        token: \"string.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }],\n      attributes: [{\n        token: \"entity.other.attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"tag_whitespace\"\n      }, {\n        include: \"attribute_value\"\n      }],\n      attribute_value: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }, {\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }]\n    };\n    if (this.constructor === XmlHighlightRules) this.normalizeRules();\n  };\n\n  (function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n      this.$rules.tag.unshift({\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: prefix + \"start\"\n        }]\n      });\n      this.$rules[tag + \"-end\"] = [{\n        include: \"attributes\"\n      }, {\n        token: \"meta.tag.punctuation.tag-close.xml\",\n        regex: \"/?>\",\n        next: \"start\",\n        onMatch: function onMatch(value, currentState, stack) {\n          stack.splice(0);\n          return this.token;\n        }\n      }];\n      this.embedRules(HighlightRules, prefix, [{\n        token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: tag + \"-end\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\"\n      }]);\n    };\n  }).call(TextHighlightRules.prototype);\n  oop.inherits(XmlHighlightRules, TextHighlightRules);\n  exports.XmlHighlightRules = XmlHighlightRules;\n});\nace.define(\"ace/mode/behaviour/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/token_iterator\", \"ace/lib/lang\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Behaviour = acequire(\"../behaviour\").Behaviour;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n  var lang = acequire(\"../../lib/lang\");\n\n  function is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n\n  var XmlBehaviour = function XmlBehaviour() {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '\"' || text == \"'\") {\n        var quote = text;\n        var selected = session.doc.getTextRange(editor.getSelectionRange());\n\n        if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n          return {\n            text: quote + selected + quote,\n            selection: false\n          };\n        }\n\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        var rightChar = line.substring(cursor.column, cursor.column + 1);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n\n        if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n          return {\n            text: \"\",\n            selection: [1, 1]\n          };\n        }\n\n        if (!token) token = iterator.stepBackward();\n        if (!token) return;\n\n        while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n          token = iterator.stepBackward();\n        }\n\n        var rightSpace = !rightChar || rightChar.match(/\\s/);\n\n        if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?')) {\n          return {\n            text: quote + quote,\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n      var selected = session.doc.getTextRange(range);\n\n      if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n\n        if (rightChar == selected) {\n          range.end.column++;\n          return range;\n        }\n      }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '>') {\n        var position = editor.getSelectionRange().start;\n        var iterator = new TokenIterator(session, position.row, position.column);\n        var token = iterator.getCurrentToken() || iterator.stepBackward();\n        if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\"))) return;\n        if (is(token, \"reference.attribute-value\")) return;\n\n        if (is(token, \"attribute-value\")) {\n          var firstChar = token.value.charAt(0);\n\n          if (firstChar == '\"' || firstChar == \"'\") {\n            var lastChar = token.value.charAt(token.value.length - 1);\n            var tokenEnd = iterator.getCurrentTokenColumn() + token.value.length;\n            if (tokenEnd > position.column || tokenEnd == position.column && firstChar != lastChar) return;\n          }\n        }\n\n        while (!is(token, \"tag-name\")) {\n          token = iterator.stepBackward();\n\n          if (token.value == \"<\") {\n            token = iterator.stepForward();\n            break;\n          }\n        }\n\n        var tokenRow = iterator.getCurrentTokenRow();\n        var tokenColumn = iterator.getCurrentTokenColumn();\n        if (is(iterator.stepBackward(), \"end-tag-open\")) return;\n        var element = token.value;\n        if (tokenRow == position.row) element = element.substring(0, position.column - tokenColumn);\n        if (this.voidElements.hasOwnProperty(element.toLowerCase())) return;\n        return {\n          text: \">\" + \"</\" + element + \">\",\n          selection: [1, 1]\n        };\n      }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == \"\\n\") {\n        var cursor = editor.getCursorPosition();\n        var line = session.getLine(cursor.row);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n\n        if (token && token.type.indexOf(\"tag-close\") !== -1) {\n          if (token.value == \"/>\") return;\n\n          while (token && token.type.indexOf(\"tag-name\") === -1) {\n            token = iterator.stepBackward();\n          }\n\n          if (!token) {\n            return;\n          }\n\n          var tag = token.value;\n          var row = iterator.getCurrentTokenRow();\n          token = iterator.stepBackward();\n\n          if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n            return;\n          }\n\n          if (this.voidElements && !this.voidElements[tag]) {\n            var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n            var line = session.getLine(row);\n            var nextIndent = this.$getIndent(line);\n            var indent = nextIndent + session.getTabString();\n\n            if (nextToken && nextToken.value === \"</\") {\n              return {\n                text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                selection: [1, indent.length, 1, indent.length]\n              };\n            } else {\n              return {\n                text: \"\\n\" + indent\n              };\n            }\n          }\n        }\n      }\n    });\n  };\n\n  oop.inherits(XmlBehaviour, Behaviour);\n  exports.XmlBehaviour = XmlBehaviour;\n});\nace.define(\"ace/mode/folding/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/range\", \"ace/mode/folding/fold_mode\", \"ace/token_iterator\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var lang = acequire(\"../../lib/lang\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags) oop.mixin(this.optionalEndTags, optionalEndTags);\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n\n  var Tag = function Tag() {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {\n      row: 0,\n      column: 0\n    };\n    this.end = {\n      row: 0,\n      column: 0\n    };\n  };\n\n  function is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n\n  (function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var tag = this._getFirstTagInLine(session, row);\n\n      if (!tag) return this.getCommentFoldWidget(session, row);\n      if (tag.closing || !tag.tagName && tag.selfClosing) return foldStyle == \"markbeginend\" ? \"end\" : \"\";\n      if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase())) return \"\";\n      if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column)) return \"\";\n      return \"start\";\n    };\n\n    this.getCommentFoldWidget = function (session, row) {\n      if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row))) return \"start\";\n      return \"\";\n    };\n\n    this._getFirstTagInLine = function (session, row) {\n      var tokens = session.getTokens(row);\n      var tag = new Tag();\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (is(token, \"tag-open\")) {\n          tag.end.column = tag.start.column + token.value.length;\n          tag.closing = is(token, \"end-tag-open\");\n          token = tokens[++i];\n          if (!token) return null;\n          tag.tagName = token.value;\n          tag.end.column += token.value.length;\n\n          for (i++; i < tokens.length; i++) {\n            token = tokens[i];\n            tag.end.column += token.value.length;\n\n            if (is(token, \"tag-close\")) {\n              tag.selfClosing = token.value == '/>';\n              break;\n            }\n          }\n\n          return tag;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == '/>';\n          return tag;\n        }\n\n        tag.start.column += token.value.length;\n      }\n\n      return null;\n    };\n\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n      var tokens = session.getTokens(row);\n      var column = 0;\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        column += token.value.length;\n        if (column < startColumn) continue;\n\n        if (is(token, \"end-tag-open\")) {\n          token = tokens[i + 1];\n          if (token && token.value == tagName) return true;\n        }\n      }\n\n      return false;\n    };\n\n    this._readTagForward = function (iterator) {\n      var token = iterator.getCurrentToken();\n      if (!token) return null;\n      var tag = new Tag();\n\n      do {\n        if (is(token, \"tag-open\")) {\n          tag.closing = is(token, \"end-tag-open\");\n          tag.start.row = iterator.getCurrentTokenRow();\n          tag.start.column = iterator.getCurrentTokenColumn();\n        } else if (is(token, \"tag-name\")) {\n          tag.tagName = token.value;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == \"/>\";\n          tag.end.row = iterator.getCurrentTokenRow();\n          tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n          iterator.stepForward();\n          return tag;\n        }\n      } while (token = iterator.stepForward());\n\n      return null;\n    };\n\n    this._readTagBackward = function (iterator) {\n      var token = iterator.getCurrentToken();\n      if (!token) return null;\n      var tag = new Tag();\n\n      do {\n        if (is(token, \"tag-open\")) {\n          tag.closing = is(token, \"end-tag-open\");\n          tag.start.row = iterator.getCurrentTokenRow();\n          tag.start.column = iterator.getCurrentTokenColumn();\n          iterator.stepBackward();\n          return tag;\n        } else if (is(token, \"tag-name\")) {\n          tag.tagName = token.value;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == \"/>\";\n          tag.end.row = iterator.getCurrentTokenRow();\n          tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n        }\n      } while (token = iterator.stepBackward());\n\n      return null;\n    };\n\n    this._pop = function (stack, tag) {\n      while (stack.length) {\n        var top = stack[stack.length - 1];\n\n        if (!tag || top.tagName == tag.tagName) {\n          return stack.pop();\n        } else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {\n          stack.pop();\n          continue;\n        } else {\n          return null;\n        }\n      }\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var firstTag = this._getFirstTagInLine(session, row);\n\n      if (!firstTag) {\n        return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);\n      }\n\n      var isBackward = firstTag.closing || firstTag.selfClosing;\n      var stack = [];\n      var tag;\n\n      if (!isBackward) {\n        var iterator = new TokenIterator(session, row, firstTag.start.column);\n        var start = {\n          row: row,\n          column: firstTag.start.column + firstTag.tagName.length + 2\n        };\n        if (firstTag.start.row == firstTag.end.row) start.column = firstTag.end.column;\n\n        while (tag = this._readTagForward(iterator)) {\n          if (tag.selfClosing) {\n            if (!stack.length) {\n              tag.start.column += tag.tagName.length + 2;\n              tag.end.column -= 2;\n              return Range.fromPoints(tag.start, tag.end);\n            } else continue;\n          }\n\n          if (tag.closing) {\n            this._pop(stack, tag);\n\n            if (stack.length == 0) return Range.fromPoints(start, tag.start);\n          } else {\n            stack.push(tag);\n          }\n        }\n      } else {\n        var iterator = new TokenIterator(session, row, firstTag.end.column);\n        var end = {\n          row: row,\n          column: firstTag.start.column\n        };\n\n        while (tag = this._readTagBackward(iterator)) {\n          if (tag.selfClosing) {\n            if (!stack.length) {\n              tag.start.column += tag.tagName.length + 2;\n              tag.end.column -= 2;\n              return Range.fromPoints(tag.start, tag.end);\n            } else continue;\n          }\n\n          if (!tag.closing) {\n            this._pop(stack, tag);\n\n            if (stack.length == 0) {\n              tag.start.column += tag.tagName.length + 2;\n              if (tag.start.row == tag.end.row && tag.start.column < tag.end.column) tag.start.column = tag.end.column;\n              return Range.fromPoints(tag.start, end);\n            }\n          } else {\n            stack.push(tag);\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text\", \"ace/mode/xml_highlight_rules\", \"ace/mode/behaviour/xml\", \"ace/mode/folding/xml\", \"ace/worker/worker_client\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var TextMode = acequire(\"./text\").Mode;\n  var XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\n  var XmlBehaviour = acequire(\"./behaviour/xml\").XmlBehaviour;\n  var XmlFoldMode = acequire(\"./folding/xml\").FoldMode;\n  var WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\n  var Mode = function Mode() {\n    this.HighlightRules = XmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.foldingRules = new XmlFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.voidElements = lang.arrayToMap([]);\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], require(\"../worker/xml\"), \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"error\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n\n    this.$id = \"ace/mode/xml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}