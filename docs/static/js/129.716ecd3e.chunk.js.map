{"version":3,"sources":["../node_modules/brace/mode/sparql.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","SPARQLHighlightRules","this","$rules","start","include","token","regex","push","next","defaultToken","normalizeRules","metaData","fileTypes","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id"],"mappings":"+HAAAA,IAAIC,OAAO,kCAAmC,CAAC,UAAW,UAAW,SAAU,cAAe,kCAAkC,SAAUC,EAAUC,EAASC,GAC3J,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAuB,WACzBC,KAAKC,OAAS,CACZC,MAAO,CAAC,CACNC,QAAS,aACR,CACDA,QAAS,YACR,CACDA,QAAS,6BACR,CACDA,QAAS,6BACR,CACDA,QAAS,oBACR,CACDA,QAAS,kBACR,CACDA,QAAS,qBACR,CACDA,QAAS,qBACR,CACDA,QAAS,cACR,CACDA,QAAS,WACR,CACDA,QAAS,aACR,CACDA,QAAS,uBACR,CACDA,QAAS,cACR,CACDA,QAAS,oBACR,CACDA,QAAS,2BAEX,mBAAoB,CAAC,CACnBC,MAAO,mCACPC,MAAO,eAET,sBAAuB,CAAC,CACtBD,MAAO,0BACPC,MAAO,23CAET,YAAa,CAAC,CACZD,MAAO,CAAC,wCAAyC,4BACjDC,MAAO,aAET,YAAa,CAAC,CACZD,MAAO,uBACPC,MAAO,k+BAET,mBAAoB,CAAC,CACnBD,MAAO,kCACPC,MAAO,wFAET,aAAc,CAAC,CACbD,MAAO,mCACPC,MAAO,kBAET,yBAA0B,CAAC,CACzBD,MAAO,sCACPC,MAAO,0BAET,UAAW,CAAC,CACVD,MAAO,iCACPC,MAAO,6DAET,oBAAqB,CAAC,CACpBD,MAAO,0CACPC,MAAO,sCAET,iBAAkB,CAAC,CACjBD,MAAO,0CACPC,MAAO,IACPC,KAAM,CAAC,CACLF,MAAO,0CACPC,MAAO,IACPE,KAAM,OACL,CACDC,aAAc,8CAGlB,4BAA6B,CAAC,CAC5BJ,MAAO,0CACPC,MAAO,SAET,4BAA6B,CAAC,CAC5BD,MAAO,CAAC,0CAA2C,mCACnDC,MAAO,qCAET,WAAY,CAAC,CACXD,MAAO,8BACPC,MAAO,MACPC,KAAM,CAAC,CACLF,MAAO,8BACPC,MAAO,MACPE,KAAM,OACL,CACDC,aAAc,iCAEf,CACDJ,MAAO,8BACPC,MAAO,IACPC,KAAM,CAAC,CACLF,MAAO,8BACPC,MAAO,IACPE,KAAM,OACL,CACDH,MAAO,yBACPC,MAAO,KACN,CACDD,MAAO,mCACPC,MAAO,OACN,CACDG,aAAc,kCAGlB,aAAc,CAAC,CACbJ,MAAO,wBACPC,MAAO,4BAET,oBAAqB,CAAC,CACpBD,MAAO,sCACPC,MAAO,yBAGXL,KAAKS,kBAGPV,EAAqBW,SAAW,CAC9BC,UAAW,CAAC,KAAM,UAClBC,KAAM,SACNC,UAAW,iBAEbhB,EAAIiB,SAASf,EAAsBD,GACnCH,EAAQI,qBAAuBA,KAEjCP,IAAIC,OAAO,0BAA2B,CAAC,UAAW,UAAW,SAAU,cAAe,YAAa,+BAA+B,SAAUC,EAAUC,EAASC,GAC7J,aAEA,IAAIC,EAAMH,EAAS,iBACfqB,EAAQrB,EAAS,eAAeqB,MAChCC,EAAetB,EAAS,eAAeuB,SAEvCA,EAAWtB,EAAQsB,SAAW,SAAUC,GACtCA,IACFlB,KAAKmB,mBAAqB,IAAIC,OAAOpB,KAAKmB,mBAAmBE,OAAOC,QAAQ,YAAa,IAAMJ,EAAahB,QAC5GF,KAAKuB,kBAAoB,IAAIH,OAAOpB,KAAKuB,kBAAkBF,OAAOC,QAAQ,YAAa,IAAMJ,EAAaM,QAI9G3B,EAAIiB,SAASG,EAAUD,GACvB,WACEhB,KAAKmB,mBAAqB,mCAC1BnB,KAAKuB,kBAAoB,uCACzBvB,KAAKyB,yBAA2B,uBAChCzB,KAAK0B,yBAA2B,2BAChC1B,KAAK2B,cAAgB,4BACrB3B,KAAK4B,mBAAqB5B,KAAK6B,cAE/B7B,KAAK6B,cAAgB,SAAUC,EAASC,EAAWC,GACjD,IAAIC,EAAOH,EAAQI,QAAQF,GAE3B,GAAIhC,KAAKyB,yBAAyBU,KAAKF,KAChCjC,KAAK2B,cAAcQ,KAAKF,KAAUjC,KAAK0B,yBAAyBS,KAAKF,GAAO,MAAO,GAG1F,IAAIG,EAAKpC,KAAK4B,mBAAmBE,EAASC,EAAWC,GAErD,OAAKI,GAAMpC,KAAK2B,cAAcQ,KAAKF,GAAc,QAE1CG,GAGTpC,KAAKqC,mBAAqB,SAAUP,EAASC,EAAWC,EAAKM,GAC3D,IAmBIC,EAnBAN,EAAOH,EAAQI,QAAQF,GAC3B,GAAIhC,KAAK2B,cAAcQ,KAAKF,GAAO,OAAOjC,KAAKwC,sBAAsBV,EAASG,EAAMD,GAGpF,GAFIO,EAAQN,EAAKM,MAAMvC,KAAKmB,oBAEjB,CACT,IAAIsB,EAAIF,EAAMG,MACd,GAAIH,EAAM,GAAI,OAAOvC,KAAK2C,oBAAoBb,EAASS,EAAM,GAAIP,EAAKS,GACtE,IAAIG,EAAQd,EAAQe,oBAAoBb,EAAKS,EAAIF,EAAM,GAAGO,OAAQ,GAQlE,OANIF,IAAUA,EAAMG,gBACdT,EACFM,EAAQ5C,KAAKgD,gBAAgBlB,EAASE,GAChB,OAAbD,IAAoBa,EAAQ,OAGlCA,EAGT,GAAkB,cAAdb,IACAQ,EAAQN,EAAKM,MAAMvC,KAAKuB,oBAEjB,CACLkB,EAAIF,EAAMG,MAAQH,EAAM,GAAGO,OAC/B,OAAIP,EAAM,GAAWvC,KAAKiD,oBAAoBnB,EAASS,EAAM,GAAIP,EAAKS,GAC/DX,EAAQe,oBAAoBb,EAAKS,GAAI,KAIhDzC,KAAKgD,gBAAkB,SAAUlB,EAASE,GASxC,IARA,IAAIC,EAAOH,EAAQI,QAAQF,GACvBkB,EAAcjB,EAAKkB,OAAO,MAC1BC,EAAWpB,EACXqB,EAAcpB,EAAKa,OAEnBQ,EADJtB,GAAY,EAERuB,EAASzB,EAAQ0B,cAEZxB,EAAMuB,GAAQ,CAErB,IAAIE,GADJxB,EAAOH,EAAQI,QAAQF,IACLmB,OAAO,MACzB,IAAgB,IAAZM,EAAJ,CACA,GAAIP,EAAcO,EAAQ,MAC1B,IAAIC,EAAW1D,KAAKqC,mBAAmBP,EAAS,MAAOE,GAEvD,GAAI0B,EAAU,CACZ,GAAIA,EAASxD,MAAM8B,KAAOoB,EACxB,MACK,GAAIM,EAASX,cAClBf,EAAM0B,EAASlC,IAAIQ,SACd,GAAIkB,GAAeO,EACxB,MAIJH,EAAStB,GAGX,OAAO,IAAIjB,EAAMqC,EAAUC,EAAaC,EAAQxB,EAAQI,QAAQoB,GAAQR,SAG1E9C,KAAKwC,sBAAwB,SAAUV,EAASG,EAAMD,GAOpD,IANA,IAAIqB,EAAcpB,EAAKkB,OAAO,QAC1BI,EAASzB,EAAQ0B,YACjBJ,EAAWpB,EACX2B,EAAK,uCACLC,EAAQ,IAEH5B,EAAMuB,GAAQ,CACrBtB,EAAOH,EAAQI,QAAQF,GACvB,IAAI6B,EAAIF,EAAGG,KAAK7B,GAChB,GAAK4B,IACDA,EAAE,GAAID,IAAaA,KAClBA,GAAO,MAKd,GAFa5B,EAEAoB,EACX,OAAO,IAAIrC,EAAMqC,EAAUC,EAHhBrB,EAGqCC,EAAKa,UAGxDiB,KAAK9C,EAAS+C,cAEnBxE,IAAIC,OAAO,kBAAmB,CAAC,UAAW,UAAW,SAAU,cAAe,gBAAiB,kCAAmC,4BAA4B,SAAUC,EAAUC,EAASC,GACzL,aAEA,IAAIC,EAAMH,EAAS,cACfuE,EAAWvE,EAAS,UAAUwE,KAC9BnE,EAAuBL,EAAS,4BAA4BK,qBAC5DkB,EAAWvB,EAAS,oBAAoBuB,SAExCiD,EAAO,WACTlE,KAAKmE,eAAiBpE,EACtBC,KAAKoE,aAAe,IAAInD,GAG1BpB,EAAIiB,SAASoD,EAAMD,GACnB,WACEjE,KAAKqE,IAAM,mBACVN,KAAKG,EAAKF,WACbrE,EAAQuE,KAAOA","file":"static/js/129.716ecd3e.chunk.js","sourcesContent":["ace.define(\"ace/mode/sparql_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var SPARQLHighlightRules = function SPARQLHighlightRules() {\n    this.$rules = {\n      start: [{\n        include: \"#comments\"\n      }, {\n        include: \"#strings\"\n      }, {\n        include: \"#string-language-suffixes\"\n      }, {\n        include: \"#string-datatype-suffixes\"\n      }, {\n        include: \"#logic-operators\"\n      }, {\n        include: \"#relative-urls\"\n      }, {\n        include: \"#xml-schema-types\"\n      }, {\n        include: \"#rdf-schema-types\"\n      }, {\n        include: \"#owl-types\"\n      }, {\n        include: \"#qnames\"\n      }, {\n        include: \"#keywords\"\n      }, {\n        include: \"#built-in-functions\"\n      }, {\n        include: \"#variables\"\n      }, {\n        include: \"#boolean-literal\"\n      }, {\n        include: \"#punctuation-operators\"\n      }],\n      \"#boolean-literal\": [{\n        token: \"constant.language.boolean.sparql\",\n        regex: /true|false/\n      }],\n      \"#built-in-functions\": [{\n        token: \"support.function.sparql\",\n        regex: /[Aa][Bb][Ss]|[Aa][Vv][Gg]|[Bb][Nn][Oo][Dd][Ee]|[Bb][Oo][Uu][Nn][Dd]|[Cc][Ee][Ii][Ll]|[Cc][Oo][Aa][Ll][Ee][Ss][Cc][Ee]|[Cc][Oo][Nn][Cc][Aa][Tt]|[Cc][Oo][Nn][Tt][Aa][Ii][Nn][Ss]|[Cc][Oo][Uu][Nn][Tt]|[Dd][Aa][Tt][Aa][Tt][Yy][Pp][Ee]|[Dd][Aa][Yy]|[Ee][Nn][Cc][Oo][Dd][Ee]_[Ff][Oo][Rr]_[Uu][Rr][Ii]|[Ee][Xx][Ii][Ss][Tt][Ss]|[Ff][Ll][Oo][Oo][Rr]|[Gg][Rr][Oo][Uu][Pp]_[Cc][Oo][Nn][Cc][Aa][Tt]|[Hh][Oo][Uu][Rr][Ss]|[Ii][Ff]|[Ii][Rr][Ii]|[Ii][Ss][Bb][Ll][Aa][Nn][Kk]|[Ii][Ss][Ii][Rr][Ii]|[Ii][Ss][Ll][Ii][Tt][Ee][Rr][Aa][Ll]|[Ii][Ss][Nn][Uu][Mm][Ee][Rr][Ii][Cc]|[Ii][Ss][Uu][Rr][Ii]|[Ll][Aa][Nn][Gg]|[Ll][Aa][Nn][Gg][Mm][Aa][Tt][Cc][Hh][Ee][Ss]|[Ll][Cc][Aa][Ss][Ee]|[Mm][Aa][Xx]|[Mm][Dd]5|[Mm][Ii][Nn]|[Mm][Ii][Nn][Uu][Tt][Ee][Ss]|[Mm][Oo][Nn][Tt][Hh]|[Nn][Oo][Ww]|[Rr][Aa][Nn][Dd]|[Rr][Ee][Gg][Ee][Xx]|[Rr][Ee][Pp][Ll][Aa][Cc][Ee]|[Rr][Oo][Uu][Nn][Dd]|[Ss][Aa][Mm][Ee][Tt][Ee][Rr][Mm]|[Ss][Aa][Mm][Pp][Ll][Ee]|[Ss][Ee][Cc][Oo][Nn][Dd][Ss]|[Ss][Ee][Pp][Aa][Rr][Aa][Tt][Oo][Rr]|[Ss][Hh][Aa](?:1|256|384|512)|[Ss][Tt][Rr]|[Ss][Tt][Rr][Aa][Ff][Tt][Ee][Rr]|[Ss][Tt][Rr][Bb][Ee][Ff][Oo][Rr][Ee]|[Ss][Tt][Rr][Dd][Tt]|[Ss][Tt][Rr][Ee][Nn][Dd][Ss]|[Ss][Tt][Rr][Ll][Aa][Nn][Gg]|[Ss][Tt][Rr][Ll][Ee][Nn]|[Ss][Tt][Rr][Ss][Tt][Aa][Rr][Tt][Ss]|[Ss][Tt][Rr][Uu][Uu][Ii][Dd]|[Ss][Uu][Bb][Ss][Tt][Rr]|[Ss][Uu][Mm]|[Tt][Ii][Mm][Ee][Zz][Oo][Nn][Ee]|[Tt][Zz]|[Uu][Cc][Aa][Ss][Ee]|[Uu][Rr][Ii]|[Uu][Uu][Ii][Dd]|[Yy][Ee][Aa][Rr]/\n      }],\n      \"#comments\": [{\n        token: [\"punctuation.definition.comment.sparql\", \"comment.line.hash.sparql\"],\n        regex: /(#)(.*$)/\n      }],\n      \"#keywords\": [{\n        token: \"keyword.other.sparql\",\n        regex: /[Aa][Dd][Dd]|[Aa][Ll][Ll]|[Aa][Ss]|[As][Ss][Cc]|[Aa][Ss][Kk]|[Bb][Aa][Ss][Ee]|[Bb][Ii][Nn][Dd]|[Bb][Yy]|[Cc][Ll][Ee][Aa][Rr]|[Cc][Oo][Nn][Ss][Tt][Rr][Uu][Cc][Tt]|[Cc][Oo][Pp][Yy]|[Cc][Rr][Ee][Aa][Tt][Ee]|[Dd][Aa][Tt][Aa]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ee][Ll][Ee][Tt][Ee]|[Dd][Ee][Sc][Cc]|[Dd][Ee][Ss][Cc][Rr][Ii][Bb][Ee]|[Dd][Ii][Ss][Tt][Ii][Nn][Cc][Tt]|[Dd][Rr][Oo][Pp]|[Ff][Ii][Ll][Tt][Ee][Rr]|[Ff][Rr][Oo][Mm]|[Gg][Rr][Aa][Pp][Hh]|[Gg][Rr][Oo][Uu][Pp]|[Hh][Aa][Vv][Ii][Nn][Gg]|[Ii][Nn][Ss][Ee][Rr][Tt]|[Ll][Ii][Mm][Ii][Tt]|[Ll][Oo][Aa][Dd]|[Mm][Ii][Nn][Uu][Ss]|[Mm][Oo][Vv][Ee]|[Nn][Aa][Mm][Ee][Dd]|[Oo][Ff][Ff][Ss][Ee][Tt]|[Oo][Pp][Tt][Ii][Oo][Nn][Aa][Ll]|[Oo][Rr][Dd][Ee][Rr]|[Pp][Rr][Ee][Ff][Ii][Xx]|[Rr][Ee][Dd][Uu][Cc][Ee][Dd]|[Ss][Ee][Ll][Ee][Cc][Tt]|[Ss][Ee][Pp][Aa][Rr][Aa][Tt][Oo][Rr]|[Ss][Ee][Rr][Vv][Ii][Cc][Ee]|[Ss][Ii][Ll][Ee][Nn][Tt]|[Tt][Oo]|[Uu][Nn][Dd][Ee][Ff]|[Uu][Nn][Ii][Oo][Nn]|[Uu][Ss][Ii][Nn][Gg]|[Vv][Aa][Ll][Uu][Ee][Ss]|[Ww][He][Ee][Rr][Ee]|[Ww][Ii][Tt][Hh]/\n      }],\n      \"#logic-operators\": [{\n        token: \"keyword.operator.logical.sparql\",\n        regex: /\\|\\||&&|=|!=|<|>|<=|>=|(?:^|!?\\s)IN(?:!?\\s|$)|(?:^|!?\\s)NOT(?:!?\\s|$)|-|\\+|\\*|\\/|\\!/\n      }],\n      \"#owl-types\": [{\n        token: \"support.type.datatype.owl.sparql\",\n        regex: /owl:[a-zA-Z]+/\n      }],\n      \"#punctuation-operators\": [{\n        token: \"keyword.operator.punctuation.sparql\",\n        regex: /;|,|\\.|\\(|\\)|\\{|\\}|\\|/\n      }],\n      \"#qnames\": [{\n        token: \"entity.name.other.qname.sparql\",\n        regex: /(?:[a-zA-Z][-_a-zA-Z0-9]*)?:(?:[_a-zA-Z][-_a-zA-Z0-9]*)?/\n      }],\n      \"#rdf-schema-types\": [{\n        token: \"support.type.datatype.rdf.schema.sparql\",\n        regex: /rdfs?:[a-zA-Z]+|(?:^|\\s)a(?:\\s|$)/\n      }],\n      \"#relative-urls\": [{\n        token: \"string.quoted.other.relative.url.sparql\",\n        regex: /</,\n        push: [{\n          token: \"string.quoted.other.relative.url.sparql\",\n          regex: />/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.other.relative.url.sparql\"\n        }]\n      }],\n      \"#string-datatype-suffixes\": [{\n        token: \"keyword.operator.datatype.suffix.sparql\",\n        regex: /\\^\\^/\n      }],\n      \"#string-language-suffixes\": [{\n        token: [\"keyword.operator.language.suffix.sparql\", \"constant.language.suffix.sparql\"],\n        regex: /(?!\")(@)([a-z]+(?:\\-[a-z0-9]+)*)/\n      }],\n      \"#strings\": [{\n        token: \"string.quoted.triple.sparql\",\n        regex: /\"\"\"/,\n        push: [{\n          token: \"string.quoted.triple.sparql\",\n          regex: /\"\"\"/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.triple.sparql\"\n        }]\n      }, {\n        token: \"string.quoted.double.sparql\",\n        regex: /\"/,\n        push: [{\n          token: \"string.quoted.double.sparql\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          token: \"invalid.string.newline\",\n          regex: /$/\n        }, {\n          token: \"constant.character.escape.sparql\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string.quoted.double.sparql\"\n        }]\n      }],\n      \"#variables\": [{\n        token: \"variable.other.sparql\",\n        regex: /(?:\\?|\\$)[-_a-zA-Z0-9]+/\n      }],\n      \"#xml-schema-types\": [{\n        token: \"support.type.datatype.schema.sparql\",\n        regex: /xsd?:[a-z][a-zA-Z]+/\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  SPARQLHighlightRules.metaData = {\n    fileTypes: [\"rq\", \"sparql\"],\n    name: \"SPARQL\",\n    scopeName: \"source.sparql\"\n  };\n  oop.inherits(SPARQLHighlightRules, TextHighlightRules);\n  exports.SPARQLHighlightRules = SPARQLHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/sparql\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/sparql_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var SPARQLHighlightRules = acequire(\"./sparql_highlight_rules\").SPARQLHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = SPARQLHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/sparql\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}