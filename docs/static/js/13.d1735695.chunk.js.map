{"version":3,"sources":["../node_modules/brace/mode/assembly_x86.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","AssemblyX86HighlightRules","this","$rules","start","token","regex","caseInsensitive","push","next","defaultToken","normalizeRules","metaData","fileTypes","name","scopeName","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"mappings":"6HAAAA,IAAIC,OAAO,wCAAyC,CAAC,UAAW,UAAW,SAAU,cAAe,kCAAkC,SAAUC,EAAUC,EAASC,GACjK,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAA4B,WAC9BC,KAAKC,OAAS,CACZC,MAAO,CAAC,CACNC,MAAO,2BACPC,MAAO,46HACPC,iBAAiB,GAChB,CACDF,MAAO,uCACPC,MAAO,uOACPC,iBAAiB,GAChB,CACDF,MAAO,sCACPC,MAAO,gBACN,CACDD,MAAO,0CACPC,MAAO,oBACPC,iBAAiB,GAChB,CACDF,MAAO,0CACPC,MAAO,mBACPC,iBAAiB,GAChB,CACDF,MAAO,kBACPC,MAAO,mBACN,CACDD,MAAO,kBACPC,MAAO,mBACN,CACDD,MAAO,sCACPC,MAAO,OACPE,KAAM,CAAC,CACLH,MAAO,sCACPC,MAAO,OACPG,KAAM,OACL,CACDC,aAAc,yCAEf,CACDL,MAAO,CAAC,sCAAuC,sCAAuC,iCACtFC,MAAO,uCACN,CACDD,MAAO,sCACPC,MAAO,gBACN,CACDD,MAAO,CAAC,sCAAuC,gCAAiC,sCAAuC,+BACvHC,MAAO,iDACN,CACDD,MAAO,sCACPC,MAAO,cACN,CACDD,MAAO,CAAC,OAAQ,sCAAuC,OAAQ,iCAC/DC,MAAO,+wBACPC,iBAAiB,GAChB,CACDF,MAAO,sCACPC,MAAO,6GACPC,iBAAiB,GAChB,CACDF,MAAO,gCACPC,MAAO,qBACN,CACDD,MAAO,gCACPC,MAAO,uBACN,CACDD,MAAO,gCACPC,MAAO,cACN,CACDD,MAAO,gCACPC,MAAO,gBACN,CACDD,MAAO,mBACPC,MAAO,UAGXJ,KAAKS,kBAGPV,EAA0BW,SAAW,CACnCC,UAAW,CAAC,OACZC,KAAM,eACNC,UAAW,mBAEbhB,EAAIiB,SAASf,EAA2BD,GACxCH,EAAQI,0BAA4BA,KAEtCP,IAAIC,OAAO,0BAA2B,CAAC,UAAW,UAAW,SAAU,cAAe,6BAA8B,cAAc,SAAUC,EAAUC,EAASC,GAC7J,aAEA,IAAIC,EAAMH,EAAS,iBACfqB,EAAerB,EAAS,eAAesB,SACvCC,EAAQvB,EAAS,eAAeuB,MAEhCD,EAAWrB,EAAQqB,SAAW,aAElCnB,EAAIiB,SAASE,EAAUD,GACvB,WACEf,KAAKkB,mBAAqB,SAAUC,EAASC,EAAWC,GACtD,IAAIC,EAAQtB,KAAKuB,iBAAiBJ,EAASE,GAC3C,GAAIC,EAAO,OAAOA,EAClB,IAAIE,EAAK,KACLC,EAAON,EAAQO,QAAQL,GACvBM,EAAaF,EAAKG,OAAOJ,GAC7B,IAAmB,GAAfG,GAAwC,KAApBF,EAAKE,GAA7B,CAMA,IALA,IAAIE,EAAcJ,EAAKK,OACnBC,EAASZ,EAAQa,YACjBC,EAAWZ,EACXa,EAASb,IAEJA,EAAMU,GAAQ,CAErB,IAAII,GADJV,EAAON,EAAQO,QAAQL,IACNO,OAAOJ,GACxB,IAAc,GAAVW,EAAJ,CACA,GAAmB,KAAfV,EAAKU,GAAe,MACxBD,EAASb,GAGX,GAAIa,EAASD,EAAU,CACrB,IAAIG,EAAYjB,EAAQO,QAAQQ,GAAQJ,OACxC,OAAO,IAAIb,EAAMgB,EAAUJ,EAAaK,EAAQE,MAIpDpC,KAAKqC,cAAgB,SAAUlB,EAASC,EAAWC,GACjD,IAAII,EAAON,EAAQO,QAAQL,GACvBiB,EAASb,EAAKG,OAAO,MACrBrB,EAAOY,EAAQO,QAAQL,EAAM,GAC7BkB,EAAOpB,EAAQO,QAAQL,EAAM,GAC7BmB,EAAaD,EAAKX,OAAO,MACzBa,EAAalC,EAAKqB,OAAO,MAE7B,IAAe,GAAXU,EAEF,OADAnB,EAAQuB,YAAYrB,EAAM,IAAoB,GAAfmB,GAAoBA,EAAaC,EAAa,QAAU,GAChF,GAGT,IAAmB,GAAfD,GACF,GAAIF,GAAUG,GAA8B,KAAhBhB,EAAKa,IAAkC,KAAhB/B,EAAK+B,GAGtD,OAFAnB,EAAQuB,YAAYrB,EAAM,GAAK,GAC/BF,EAAQuB,YAAYrB,EAAM,GAAK,GACxB,aAEJ,GAAImB,GAAcF,GAA0B,KAAhBb,EAAKa,IAAkC,KAAhBC,EAAKD,KACf,GAA1CnB,EAAQO,QAAQL,EAAM,GAAGO,OAAO,MAGlC,OAFAT,EAAQuB,YAAYrB,EAAM,GAAK,QAC/BF,EAAQuB,YAAYrB,EAAM,GAAK,GACxB,GAKX,OAD6CF,EAAQuB,YAAYrB,EAAM,IAApD,GAAfmB,GAAoBA,EAAaF,EAAuC,QAA4C,GACpHA,EAASG,EAAmB,QAAoB,KAErDE,KAAK3B,EAAS4B,cAEnBpD,IAAIC,OAAO,wBAAyB,CAAC,UAAW,UAAW,SAAU,cAAe,gBAAiB,wCAAyC,4BAA4B,SAAUC,EAAUC,EAASC,GACrM,aAEA,IAAIC,EAAMH,EAAS,cACfmD,EAAWnD,EAAS,UAAUoD,KAC9B/C,EAA4BL,EAAS,kCAAkCK,0BACvEiB,EAAWtB,EAAS,oBAAoBsB,SAExC8B,EAAO,WACT9C,KAAK+C,eAAiBhD,EACtBC,KAAKgD,aAAe,IAAIhC,EACxBhB,KAAKiD,WAAajD,KAAKkD,mBAGzBrD,EAAIiB,SAASgC,EAAMD,GACnB,WACE7C,KAAKmD,iBAAmB,IACxBnD,KAAKoD,IAAM,yBACVT,KAAKG,EAAKF,WACbjD,EAAQmD,KAAOA","file":"static/js/13.d1735695.chunk.js","sourcesContent":["ace.define(\"ace/mode/assembly_x86_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var AssemblyX86HighlightRules = function AssemblyX86HighlightRules() {\n    this.$rules = {\n      start: [{\n        token: 'keyword.control.assembly',\n        regex: '\\\\b(?:aaa|aad|aam|aas|adc|add|addpd|addps|addsd|addss|addsubpd|addsubps|aesdec|aesdeclast|aesenc|aesenclast|aesimc|aeskeygenassist|and|andpd|andps|andnpd|andnps|arpl|blendpd|blendps|blendvpd|blendvps|bound|bsf|bsr|bswap|bt|btc|btr|bts|cbw|cwde|cdqe|clc|cld|cflush|clts|cmc|cmov(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|cmp|cmppd|cmpps|cmps|cnpsb|cmpsw|cmpsd|cmpsq|cmpss|cmpxchg|cmpxchg8b|cmpxchg16b|comisd|comiss|cpuid|crc32|cvtdq2pd|cvtdq2ps|cvtpd2dq|cvtpd2pi|cvtpd2ps|cvtpi2pd|cvtpi2ps|cvtps2dq|cvtps2pd|cvtps2pi|cvtsd2si|cvtsd2ss|cvts2sd|cvtsi2ss|cvtss2sd|cvtss2si|cvttpd2dq|cvtpd2pi|cvttps2dq|cvttps2pi|cvttps2dq|cvttps2pi|cvttsd2si|cvttss2si|cwd|cdq|cqo|daa|das|dec|div|divpd|divps|divsd|divss|dppd|dpps|emms|enter|extractps|f2xm1|fabs|fadd|faddp|fiadd|fbld|fbstp|fchs|fclex|fnclex|fcmov(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|fcom|fcmop|fcompp|fcomi|fcomip|fucomi|fucomip|fcos|fdecstp|fdiv|fdivp|fidiv|fdivr|fdivrp|fidivr|ffree|ficom|ficomp|fild|fincstp|finit|fnint|fist|fistp|fisttp|fld|fld1|fldl2t|fldl2e|fldpi|fldlg2|fldln2|fldz|fldcw|fldenv|fmul|fmulp|fimul|fnop|fpatan|fprem|fprem1|fptan|frndint|frstor|fsave|fnsave|fscale|fsin|fsincos|fsqrt|fst|fstp|fstcw|fnstcw|fstenv|fnstenv|fsts|fnstsw|fsub|fsubp|fisub|fsubr|fsubrp|fisubr|ftst|fucom|fucomp|fucompp|fxam|fxch|fxrstor|fxsave|fxtract|fyl2x|fyl2xp1|haddpd|haddps|husbpd|hsubps|idiv|imul|in|inc|ins|insb|insw|insd|insertps|int|into|invd|invplg|invpcid|iret|iretd|iretq|lahf|lar|lddqu|ldmxcsr|lds|les|lfs|lgs|lss|lea|leave|lfence|lgdt|lidt|llgdt|lmsw|lock|lods|lodsb|lodsw|lodsd|lodsq|lsl|ltr|maskmovdqu|maskmovq|maxpd|maxps|maxsd|maxss|mfence|minpd|minps|minsd|minss|monitor|mov|movapd|movaps|movbe|movd|movq|movddup|movdqa|movdqu|movq2q|movhlps|movhpd|movhps|movlhps|movlpd|movlps|movmskpd|movmskps|movntdqa|movntdq|movnti|movntpd|movntps|movntq|movq|movq2dq|movs|movsb|movsw|movsd|movsq|movsd|movshdup|movsldup|movss|movsx|movsxd|movupd|movups|movzx|mpsadbw|mul|mulpd|mulps|mulsd|mulss|mwait|neg|not|or|orpd|orps|out|outs|outsb|outsw|outsd|pabsb|pabsw|pabsd|packsswb|packssdw|packusdw|packuswbpaddb|paddw|paddd|paddq|paddsb|paddsw|paddusb|paddusw|palignr|pand|pandn|pause|pavgb|pavgw|pblendvb|pblendw|pclmulqdq|pcmpeqb|pcmpeqw|pcmpeqd|pcmpeqq|pcmpestri|pcmpestrm|pcmptb|pcmptgw|pcmpgtd|pcmpgtq|pcmpistri|pcmpisrm|pextrb|pextrd|pextrq|pextrw|phaddw|phaddd|phaddsw|phinposuw|phsubw|phsubd|phsubsw|pinsrb|pinsrd|pinsrq|pinsrw|pmaddubsw|pmadddwd|pmaxsb|pmaxsd|pmaxsw|pmaxsw|pmaxub|pmaxud|pmaxuw|pminsb|pminsd|pminsw|pminub|pminud|pminuw|pmovmskb|pmovsx|pmovzx|pmuldq|pmulhrsw|pmulhuw|pmulhw|pmulld|pmullw|pmuludw|pop|popa|popad|popcnt|popf|popfd|popfq|por|prefetch|psadbw|pshufb|pshufd|pshufhw|pshuflw|pshufw|psignb|psignw|psignd|pslldq|psllw|pslld|psllq|psraw|psrad|psrldq|psrlw|psrld|psrlq|psubb|psubw|psubd|psubq|psubsb|psubsw|psubusb|psubusw|test|ptest|punpckhbw|punpckhwd|punpckhdq|punpckhddq|punpcklbw|punpcklwd|punpckldq|punpckldqd|push|pusha|pushad|pushf|pushfd|pxor|prcl|rcr|rol|ror|rcpps|rcpss|rdfsbase|rdgsbase|rdmsr|rdpmc|rdrand|rdtsc|rdtscp|rep|repe|repz|repne|repnz|roundpd|roundps|roundsd|roundss|rsm|rsqrps|rsqrtss|sahf|sal|sar|shl|shr|sbb|scas|scasb|scasw|scasd|set(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|sfence|sgdt|shld|shrd|shufpd|shufps|sidt|sldt|smsw|sqrtpd|sqrtps|sqrtsd|sqrtss|stc|std|stmxcsr|stos|stosb|stosw|stosd|stosq|str|sub|subpd|subps|subsd|subss|swapgs|syscall|sysenter|sysexit|sysret|teset|ucomisd|ucomiss|ud2|unpckhpd|unpckhps|unpcklpd|unpcklps|vbroadcast|vcvtph2ps|vcvtp2sph|verr|verw|vextractf128|vinsertf128|vmaskmov|vpermilpd|vpermilps|vperm2f128|vtestpd|vtestps|vzeroall|vzeroupper|wait|fwait|wbinvd|wrfsbase|wrgsbase|wrmsr|xadd|xchg|xgetbv|xlat|xlatb|xor|xorpd|xorps|xrstor|xsave|xsaveopt|xsetbv|lzcnt|extrq|insertq|movntsd|movntss|vfmaddpd|vfmaddps|vfmaddsd|vfmaddss|vfmaddsubbpd|vfmaddsubps|vfmsubaddpd|vfmsubaddps|vfmsubpd|vfmsubps|vfmsubsd|vfnmaddpd|vfnmaddps|vfnmaddsd|vfnmaddss|vfnmsubpd|vfnmusbps|vfnmusbsd|vfnmusbss|cvt|xor|cli|sti|hlt|nop|lock|wait|enter|leave|ret|loop(?:n?e|n?z)?|call|j(?:mp|n?e|ge?|ae?|le?|be?|n?o|n?z))\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'variable.parameter.register.assembly',\n        regex: '\\\\b(?:CS|DS|ES|FS|GS|SS|RAX|EAX|RBX|EBX|RCX|ECX|RDX|EDX|RCX|RIP|EIP|IP|RSP|ESP|SP|RSI|ESI|SI|RDI|EDI|DI|RFLAGS|EFLAGS|FLAGS|R8-15|(?:Y|X)MM(?:[0-9]|10|11|12|13|14|15)|(?:A|B|C|D)(?:X|H|L)|CR(?:[0-4]|DR(?:[0-7]|TR6|TR7|EFER)))\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'constant.character.decimal.assembly',\n        regex: '\\\\b[0-9]+\\\\b'\n      }, {\n        token: 'constant.character.hexadecimal.assembly',\n        regex: '\\\\b0x[A-F0-9]+\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'constant.character.hexadecimal.assembly',\n        regex: '\\\\b[A-F0-9]+h\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'string.assembly',\n        regex: /'([^\\\\']|\\\\.)*'/\n      }, {\n        token: 'string.assembly',\n        regex: /\"([^\\\\\"]|\\\\.)*\"/\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '^\\\\[',\n        push: [{\n          token: 'support.function.directive.assembly',\n          regex: '\\\\]$',\n          next: 'pop'\n        }, {\n          defaultToken: 'support.function.directive.assembly'\n        }]\n      }, {\n        token: ['support.function.directive.assembly', 'support.function.directive.assembly', 'entity.name.function.assembly'],\n        regex: '(^struc)( )([_a-zA-Z][_a-zA-Z0-9]*)'\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '^endstruc\\\\b'\n      }, {\n        token: ['support.function.directive.assembly', 'entity.name.function.assembly', 'support.function.directive.assembly', 'constant.character.assembly'],\n        regex: '^(%macro )([_a-zA-Z][_a-zA-Z0-9]*)( )([0-9]+)'\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '^%endmacro'\n      }, {\n        token: ['text', 'support.function.directive.assembly', 'text', 'entity.name.function.assembly'],\n        regex: '(\\\\s*)(%define|%xdefine|%idefine|%undef|%assign|%defstr|%strcat|%strlen|%substr|%00|%0|%rotate|%rep|%endrep|%include|\\\\$\\\\$|\\\\$|%unmacro|%if|%elif|%else|%endif|%(?:el)?ifdef|%(?:el)?ifmacro|%(?:el)?ifctx|%(?:el)?ifidn|%(?:el)?ifidni|%(?:el)?ifid|%(?:el)?ifnum|%(?:el)?ifstr|%(?:el)?iftoken|%(?:el)?ifempty|%(?:el)?ifenv|%pathsearch|%depend|%use|%push|%pop|%repl|%arg|%stacksize|%local|%error|%warning|%fatal|%line|%!|%comment|%endcomment|__NASM_VERSION_ID__|__NASM_VER__|__FILE__|__LINE__|__BITS__|__OUTPUT_FORMAT__|__DATE__|__TIME__|__DATE_NUM__|_TIME__NUM__|__UTC_DATE__|__UTC_TIME__|__UTC_DATE_NUM__|__UTC_TIME_NUM__|__POSIX_TIME__|__PASS__|ISTRUC|AT|IEND|BITS 16|BITS 32|BITS 64|USE16|USE32|__SECT__|ABSOLUTE|EXTERN|GLOBAL|COMMON|CPU|FLOAT)\\\\b( ?)((?:[_a-zA-Z][_a-zA-Z0-9]*)?)',\n        caseInsensitive: true\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '\\\\b(?:d[bwdqtoy]|res[bwdqto]|equ|times|align|alignb|sectalign|section|ptr|byte|word|dword|qword|incbin)\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^\\\\s*%%[\\\\w.]+?:$'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^\\\\s*%\\\\$[\\\\w.]+?:$'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^[\\\\w.]+?:'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^[\\\\w.]+?\\\\b'\n      }, {\n        token: 'comment.assembly',\n        regex: ';.*$'\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  AssemblyX86HighlightRules.metaData = {\n    fileTypes: ['asm'],\n    name: 'Assembly x86',\n    scopeName: 'source.assembly'\n  };\n  oop.inherits(AssemblyX86HighlightRules, TextHighlightRules);\n  exports.AssemblyX86HighlightRules = AssemblyX86HighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var Range = acequire(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/assembly_x86\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/assembly_x86_highlight_rules\", \"ace/mode/folding/coffee\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var AssemblyX86HighlightRules = acequire(\"./assembly_x86_highlight_rules\").AssemblyX86HighlightRules;\n  var FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = AssemblyX86HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.$id = \"ace/mode/assembly_x86\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}