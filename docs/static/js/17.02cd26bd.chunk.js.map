{"version":3,"sources":["../node_modules/brace/mode/c9search.js"],"names":["ace","define","acequire","exports","module","oop","lang","TextHighlightRules","C9SearchHighlightRules","this","$rules","tokenNames","regex","onMatch","val","state","stack","values","splitRegex","exec","types","tokens","type","value","push","m","str","last","lastIndex","skipped","substring","index","length","substr","options","search","parts","split","i","test","escapeRegExp","source","flag","RegExp","e","safeCreateRegexp","token","next","numbers","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","autoOutdent","doc","row","match","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","lines","getAllLines","level1","re","startRow","endRow","l","getLength","col","TextMode","Mode","C9StyleFoldMode","HighlightRules","$outdent","foldingRules","getNextLineIndent","tab","$id"],"mappings":"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","file":"static/js/17.02cd26bd.chunk.js","sourcesContent":["ace.define(\"ace/mode/c9search_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  function safeCreateRegexp(source, flag) {\n    try {\n      return new RegExp(source, flag);\n    } catch (e) {}\n  }\n\n  var C9SearchHighlightRules = function C9SearchHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        tokenNames: [\"c9searchresults.constant.numeric\", \"c9searchresults.text\", \"c9searchresults.text\", \"c9searchresults.keyword\"],\n        regex: /(^\\s+[0-9]+)(:)(\\d*\\s?)([^\\r\\n]+)/,\n        onMatch: function onMatch(val, state, stack) {\n          var values = this.splitRegex.exec(val);\n          var types = this.tokenNames;\n          var tokens = [{\n            type: types[0],\n            value: values[1]\n          }, {\n            type: types[1],\n            value: values[2]\n          }];\n\n          if (values[3]) {\n            if (values[3] == \" \") tokens[1] = {\n              type: types[1],\n              value: values[2] + \" \"\n            };else tokens.push({\n              type: types[1],\n              value: values[3]\n            });\n          }\n\n          var regex = stack[1];\n          var str = values[4];\n          var m;\n          var last = 0;\n\n          if (regex && regex.exec) {\n            regex.lastIndex = 0;\n\n            while (m = regex.exec(str)) {\n              var skipped = str.substring(last, m.index);\n              last = regex.lastIndex;\n              if (skipped) tokens.push({\n                type: types[2],\n                value: skipped\n              });\n              if (m[0]) tokens.push({\n                type: types[3],\n                value: m[0]\n              });else if (!skipped) break;\n            }\n          }\n\n          if (last < str.length) tokens.push({\n            type: types[2],\n            value: str.substr(last)\n          });\n          return tokens;\n        }\n      }, {\n        regex: \"^Searching for [^\\\\r\\\\n]*$\",\n        onMatch: function onMatch(val, state, stack) {\n          var parts = val.split(\"\\x01\");\n          if (parts.length < 3) return \"text\";\n          var options, search, replace;\n          var i = 0;\n          var tokens = [{\n            value: parts[i++] + \"'\",\n            type: \"text\"\n          }, {\n            value: search = parts[i++],\n            type: \"text\" // \"c9searchresults.keyword\"\n\n          }, {\n            value: \"'\" + parts[i++],\n            type: \"text\"\n          }];\n\n          if (parts[2] !== \" in\") {\n            replace = parts[i];\n            tokens.push({\n              value: \"'\" + parts[i++] + \"'\",\n              type: \"text\"\n            }, {\n              value: parts[i++],\n              type: \"text\"\n            });\n          }\n\n          tokens.push({\n            value: \" \" + parts[i++] + \" \",\n            type: \"text\"\n          });\n\n          if (parts[i + 1]) {\n            options = parts[i + 1];\n            tokens.push({\n              value: \"(\" + parts[i + 1] + \")\",\n              type: \"text\"\n            });\n            i += 1;\n          } else {\n            i -= 1;\n          }\n\n          while (i++ < parts.length) {\n            parts[i] && tokens.push({\n              value: parts[i],\n              type: \"text\"\n            });\n          }\n\n          if (search) {\n            if (!/regex/.test(options)) search = lang.escapeRegExp(search);\n            if (/whole/.test(options)) search = \"\\\\b\" + search + \"\\\\b\";\n          }\n\n          var regex = search && safeCreateRegexp(\"(\" + search + \")\", / sensitive/.test(options) ? \"g\" : \"ig\");\n\n          if (regex) {\n            stack[0] = state;\n            stack[1] = regex;\n          }\n\n          return tokens;\n        }\n      }, {\n        regex: \"^(?=Found \\\\d+ matches)\",\n        token: \"text\",\n        next: \"numbers\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"^\\\\S:?[^:]+\",\n        next: \"numbers\"\n      }],\n      numbers: [{\n        regex: \"\\\\d+\",\n        token: \"constant.numeric\"\n      }, {\n        regex: \"$\",\n        token: \"text\",\n        next: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(C9SearchHighlightRules, TextHighlightRules);\n  exports.C9SearchHighlightRules = C9SearchHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/c9search\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^(\\S.*:|Searching for.*)$/;\n    this.foldingStopMarker = /^(\\s+|Found.*)$/;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var lines = session.doc.getAllLines(row);\n      var line = lines[row];\n      var level1 = /^(Found.*|Searching for.*)$/;\n      var level2 = /^(\\S.*:|\\s*)$/;\n      var re = level1.test(line) ? level1 : level2;\n      var startRow = row;\n      var endRow = row;\n\n      if (this.foldingStartMarker.test(line)) {\n        for (var i = row + 1, l = session.getLength(); i < l; i++) {\n          if (re.test(lines[i])) break;\n        }\n\n        endRow = i;\n      } else if (this.foldingStopMarker.test(line)) {\n        for (var i = row - 1; i >= 0; i--) {\n          line = lines[i];\n          if (re.test(line)) break;\n        }\n\n        startRow = i;\n      }\n\n      if (startRow != endRow) {\n        var col = line.length;\n        if (re === level1) col = line.search(/\\(Found[^)]+\\)$|$/);\n        return new Range(startRow, col, endRow, 0);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/c9search\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/c9search_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/c9search\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var C9SearchHighlightRules = acequire(\"./c9search_highlight_rules\").C9SearchHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var C9StyleFoldMode = acequire(\"./folding/c9search\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = C9SearchHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new C9StyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/c9search\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}