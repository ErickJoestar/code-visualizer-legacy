{"version":3,"sources":["../node_modules/brace/mode/ini.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","escapeRe","IniHighlightRules","this","$rules","start","token","regex","push_","next","defaultToken","push","normalizeRules","metaData","fileTypes","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","foldingStartMarker","getFoldWidgetRange","session","foldStyle","row","re","line","getLine","m","match","startName","startColumn","length","maxRow","getLength","startRow","endRow","test","lastIndexOf","endColumn","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"static/js/60.296b16c9.chunk.js","sourcesContent":["ace.define(\"ace/mode/ini_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n  var escapeRe = \"\\\\\\\\(?:[\\\\\\\\0abtrn;#=:]|x[a-fA-F\\\\d]{4})\";\n\n  var IniHighlightRules = function IniHighlightRules() {\n    this.$rules = {\n      start: [{\n        token: 'punctuation.definition.comment.ini',\n        regex: '#.*',\n        push_: [{\n          token: 'comment.line.number-sign.ini',\n          regex: '$|^',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.number-sign.ini'\n        }]\n      }, {\n        token: 'punctuation.definition.comment.ini',\n        regex: ';.*',\n        push_: [{\n          token: 'comment.line.semicolon.ini',\n          regex: '$|^',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.semicolon.ini'\n        }]\n      }, {\n        token: ['keyword.other.definition.ini', 'text', 'punctuation.separator.key-value.ini'],\n        regex: '\\\\b([a-zA-Z0-9_.-]+)\\\\b(\\\\s*)(=)'\n      }, {\n        token: ['punctuation.definition.entity.ini', 'constant.section.group-title.ini', 'punctuation.definition.entity.ini'],\n        regex: '^(\\\\[)(.*?)(\\\\])'\n      }, {\n        token: 'punctuation.definition.string.begin.ini',\n        regex: \"'\",\n        push: [{\n          token: 'punctuation.definition.string.end.ini',\n          regex: \"'\",\n          next: 'pop'\n        }, {\n          token: \"constant.language.escape\",\n          regex: escapeRe\n        }, {\n          defaultToken: 'string.quoted.single.ini'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.ini',\n        regex: '\"',\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapeRe\n        }, {\n          token: 'punctuation.definition.string.end.ini',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          defaultToken: 'string.quoted.double.ini'\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  IniHighlightRules.metaData = {\n    fileTypes: ['ini', 'conf'],\n    keyEquivalent: '^~I',\n    name: 'Ini',\n    scopeName: 'source.ini'\n  };\n  oop.inherits(IniHighlightRules, TextHighlightRules);\n  exports.IniHighlightRules = IniHighlightRules;\n});\nace.define(\"ace/mode/folding/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var re = this.foldingStartMarker;\n      var line = session.getLine(row);\n      var m = line.match(re);\n      if (!m) return;\n      var startName = m[1] + \".\";\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        if (/^\\s*$/.test(line)) continue;\n        m = line.match(re);\n        if (m && m[1].lastIndexOf(startName, 0) !== 0) break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ini_highlight_rules\", \"ace/mode/folding/ini\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var IniHighlightRules = acequire(\"./ini_highlight_rules\").IniHighlightRules;\n  var FoldMode = acequire(\"./folding/ini\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = IniHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/ini\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}