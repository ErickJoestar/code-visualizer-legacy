{"version":3,"sources":["../node_modules/brace/mode/vhdl.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","VHDLHighlightRules","keywordMapper","this","createKeywordMapper","$rules","token","regex","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","call","prototype"],"mappings":"+HAAAA,IAAIC,OAAO,gCAAiC,CAAC,UAAW,UAAW,SAAU,cAAe,kCAAkC,SAAUC,EAAUC,EAASC,GACzJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAqB,WACvB,IAKIC,EAAgBC,KAAKC,oBAAoB,CAC3C,mBAHqB,+DAIrB,QAPa,waAQb,oBAJqB,kBAKrB,mBAPqB,iBAQrB,eATgB,sKAUf,cAAc,GACjBD,KAAKE,OAAS,CACZ,MAAS,CAAC,CACRC,MAAO,UACPC,MAAO,SACN,CACDD,MAAO,SAEPC,MAAO,SACN,CACDD,MAAO,SAEPC,MAAO,SACN,CACDD,MAAO,mBAEPC,MAAO,mDACN,CACDD,MAAO,UAEPC,MAAO,kCACN,CACDD,MAAOJ,EACPK,MAAO,+BACN,CACDD,MAAO,mBACPC,MAAO,0DACN,CACDD,MAAO,uBACPC,MAAO,uBACN,CACDD,MAAO,eACPC,MAAO,QACN,CACDD,MAAO,eACPC,MAAO,UACN,CACDD,MAAO,OACPC,MAAO,WAKbR,EAAIS,SAASP,EAAoBD,GACjCH,EAAQI,mBAAqBA,KAE/BP,IAAIC,OAAO,gBAAiB,CAAC,UAAW,UAAW,SAAU,cAAe,gBAAiB,kCAAkC,SAAUC,EAAUC,EAASC,GAC1J,aAEA,IAAIC,EAAMH,EAAS,cACfa,EAAWb,EAAS,UAAUc,KAC9BT,EAAqBL,EAAS,0BAA0BK,mBAExDS,EAAO,WACTP,KAAKQ,eAAiBV,EACtBE,KAAKS,WAAaT,KAAKU,mBAGzBd,EAAIS,SAASE,EAAMD,GACnB,WACEN,KAAKW,iBAAmB,KACxBX,KAAKY,IAAM,iBACVC,KAAKN,EAAKO,WACbpB,EAAQa,KAAOA","file":"static/js/149.edb6bdcc.chunk.js","sourcesContent":["ace.define(\"ace/mode/vhdl_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var VHDLHighlightRules = function VHDLHighlightRules() {\n    var keywords = \"access|after|ailas|all|architecture|assert|attribute|\" + \"begin|block|buffer|bus|case|component|configuration|\" + \"disconnect|downto|else|elsif|end|entity|file|for|function|\" + \"generate|generic|guarded|if|impure|in|inertial|inout|is|\" + \"label|linkage|literal|loop|mapnew|next|of|on|open|\" + \"others|out|port|process|pure|range|record|reject|\" + \"report|return|select|shared|subtype|then|to|transport|\" + \"type|unaffected|united|until|wait|when|while|with\";\n    var storageType = \"bit|bit_vector|boolean|character|integer|line|natural|\" + \"positive|real|register|severity|signal|signed|\" + \"std_logic|std_logic_vector|string||text|time|unsigned|\" + \"variable\";\n    var storageModifiers = \"array|constant\";\n    var keywordOperators = \"abs|and|mod|nand|nor|not|rem|rol|ror|sla|sll|sra\" + \"srl|xnor|xor\";\n    var builtinConstants = \"true|false|null\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.operator\": keywordOperators,\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants,\n      \"storage.modifier\": storageModifiers,\n      \"storage.type\": storageType\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"string\",\n        // ' string\n        regex: \"'.*?'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"keyword\",\n        // pre-compiler directives\n        regex: \"\\\\s*(?:library|package|use)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"&|\\\\*|\\\\+|\\\\-|\\\\/|<|=|>|\\\\||=>|\\\\*\\\\*|:=|\\\\/=|>=|<=|<>\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\'|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n  };\n\n  oop.inherits(VHDLHighlightRules, TextHighlightRules);\n  exports.VHDLHighlightRules = VHDLHighlightRules;\n});\nace.define(\"ace/mode/vhdl\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/vhdl_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var VHDLHighlightRules = acequire(\"./vhdl_highlight_rules\").VHDLHighlightRules;\n\n  var Mode = function Mode() {\n    this.HighlightRules = VHDLHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/vhdl\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}