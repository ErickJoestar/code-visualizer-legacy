{"version":3,"sources":["../node_modules/brace/mode/io.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","IoHighlightRules","this","$rules","start","token","regex","comment","push","next","defaultToken","normalizeRules","metaData","fileTypes","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"static/js/61.86a84039.chunk.js","sourcesContent":["ace.define(\"ace/mode/io_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var IoHighlightRules = function IoHighlightRules() {\n    this.$rules = {\n      start: [{\n        token: ['text', 'meta.empty-parenthesis.io'],\n        regex: '(\\\\()(\\\\))',\n        comment: 'we match this to overload return inside () --Allan; scoping rules for what gets the scope have changed, so we now group the ) instead of the ( -- Rob'\n      }, {\n        token: ['text', 'meta.comma-parenthesis.io'],\n        regex: '(\\\\,)(\\\\))',\n        comment: 'We want to do the same for ,) -- Seckar; same as above -- Rob'\n      }, {\n        token: 'keyword.control.io',\n        regex: '\\\\b(?:if|ifTrue|ifFalse|ifTrueIfFalse|for|loop|reverseForeach|foreach|map|continue|break|while|do|return)\\\\b'\n      }, {\n        token: 'punctuation.definition.comment.io',\n        regex: '/\\\\*',\n        push: [{\n          token: 'punctuation.definition.comment.io',\n          regex: '\\\\*/',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.block.io'\n        }]\n      }, {\n        token: 'punctuation.definition.comment.io',\n        regex: '//',\n        push: [{\n          token: 'comment.line.double-slash.io',\n          regex: '$',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.double-slash.io'\n        }]\n      }, {\n        token: 'punctuation.definition.comment.io',\n        regex: '#',\n        push: [{\n          token: 'comment.line.number-sign.io',\n          regex: '$',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.number-sign.io'\n        }]\n      }, {\n        token: 'variable.language.io',\n        regex: '\\\\b(?:self|sender|target|proto|protos|parent)\\\\b',\n        comment: 'I wonder if some of this isn\\'t variable.other.language? --Allan; scoping this as variable.language to match Objective-C\\'s handling of \\'self\\', which is inconsistent with C++\\'s handling of \\'this\\' but perhaps intentionally so -- Rob'\n      }, {\n        token: 'keyword.operator.io',\n        regex: '<=|>=|=|:=|\\\\*|\\\\||\\\\|\\\\||\\\\+|-|/|&|&&|>|<|\\\\?|@|@@|\\\\b(?:and|or)\\\\b'\n      }, {\n        token: 'constant.other.io',\n        regex: '\\\\bGL[\\\\w_]+\\\\b'\n      }, {\n        token: 'support.class.io',\n        regex: '\\\\b[A-Z](?:\\\\w+)?\\\\b'\n      }, {\n        token: 'support.function.io',\n        regex: '\\\\b(?:clone|call|init|method|list|vector|block|\\\\w+(?=\\\\s*\\\\())\\\\b'\n      }, {\n        token: 'support.function.open-gl.io',\n        regex: '\\\\bgl(?:u|ut)?[A-Z]\\\\w+\\\\b'\n      }, {\n        token: 'punctuation.definition.string.begin.io',\n        regex: '\"\"\"',\n        push: [{\n          token: 'punctuation.definition.string.end.io',\n          regex: '\"\"\"',\n          next: 'pop'\n        }, {\n          token: 'constant.character.escape.io',\n          regex: '\\\\\\\\.'\n        }, {\n          defaultToken: 'string.quoted.triple.io'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.io',\n        regex: '\"',\n        push: [{\n          token: 'punctuation.definition.string.end.io',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          token: 'constant.character.escape.io',\n          regex: '\\\\\\\\.'\n        }, {\n          defaultToken: 'string.quoted.double.io'\n        }]\n      }, {\n        token: 'constant.numeric.io',\n        regex: '\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\\\b'\n      }, {\n        token: 'variable.other.global.io',\n        regex: 'Lobby\\\\b'\n      }, {\n        token: 'constant.language.io',\n        regex: '\\\\b(?:TRUE|true|FALSE|false|NULL|null|Null|Nil|nil|YES|NO)\\\\b'\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  IoHighlightRules.metaData = {\n    fileTypes: ['io'],\n    keyEquivalent: '^~I',\n    name: 'Io',\n    scopeName: 'source.io'\n  };\n  oop.inherits(IoHighlightRules, TextHighlightRules);\n  exports.IoHighlightRules = IoHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/io\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/io_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var IoHighlightRules = acequire(\"./io_highlight_rules\").IoHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = IoHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/io\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}