{"version":3,"sources":["../node_modules/brace/mode/elm.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","ElmHighlightRules","keywordMapper","this","createKeywordMapper","escapeRe","smallRe","source","largeRe","idRe","$rules","start","token","regex","next","value","length","onMatch","currentState","stack","markdown","defaultToken","blockComment","push","docComment","string","stringGap","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","nestable","$id"],"mappings":"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","file":"static/js/38.4cce6919.chunk.js","sourcesContent":["ace.define(\"ace/mode/elm_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var ElmHighlightRules = function ElmHighlightRules() {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": \"as|case|class|data|default|deriving|do|else|export|foreign|\" + \"hiding|jsevent|if|import|in|infix|infixl|infixr|instance|let|\" + \"module|newtype|of|open|then|type|where|_|port|\\u03BB\"\n    }, \"identifier\");\n    var escapeRe = /\\\\(\\d+|['\"\\\\&trnbvf])/;\n    var smallRe = /[a-z_]/.source;\n    var largeRe = /[A-Z]/.source;\n    var idRe = /[a-z_A-Z0-9']/.source;\n    this.$rules = {\n      start: [{\n        token: \"string.start\",\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: \"string.character\",\n        regex: \"'(?:\" + escapeRe.source + \"|.)'?\"\n      }, {\n        regex: /0(?:[xX][0-9A-Fa-f]+|[oO][0-7]+)|\\d+(\\.\\d+)?([eE][-+]?\\d*)?/,\n        token: \"constant.numeric\"\n      }, {\n        token: \"comment\",\n        regex: \"--.*\"\n      }, {\n        token: \"keyword\",\n        regex: /\\.\\.|\\||:|=|\\\\|\"|->|<-|\\u2192/\n      }, {\n        token: \"keyword.operator\",\n        regex: /[-!#$%&*+.\\/<=>?@\\\\^|~:\\u03BB\\u2192]+/\n      }, {\n        token: \"operator.punctuation\",\n        regex: /[,;`]/\n      }, {\n        regex: largeRe + idRe + \"+\\\\.?\",\n        token: function token(value) {\n          if (value[value.length - 1] == \".\") return \"entity.name.function\";\n          return \"constant.language\";\n        }\n      }, {\n        regex: \"^\" + smallRe + idRe + \"+\",\n        token: function token(value) {\n          return \"constant.language\";\n        }\n      }, {\n        token: keywordMapper,\n        regex: \"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"\n      }, {\n        regex: \"{-#?\",\n        token: \"comment.start\",\n        onMatch: function onMatch(value, currentState, stack) {\n          this.next = value.length == 2 ? \"blockComment\" : \"docComment\";\n          return this.token;\n        }\n      }, {\n        token: \"variable.language\",\n        regex: /\\[markdown\\|/,\n        next: \"markdown\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }],\n      markdown: [{\n        regex: /\\|\\]/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      blockComment: [{\n        regex: \"{-\",\n        token: \"comment.start\",\n        push: \"blockComment\"\n      }, {\n        regex: \"-}\",\n        token: \"comment.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      docComment: [{\n        regex: \"{-\",\n        token: \"comment.start\",\n        push: \"docComment\"\n      }, {\n        regex: \"-}\",\n        token: \"comment.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"doc.comment\"\n      }],\n      string: [{\n        token: \"constant.language.escape\",\n        regex: escapeRe\n      }, {\n        token: \"text\",\n        regex: /\\\\(\\s|$)/,\n        next: \"stringGap\"\n      }, {\n        token: \"string.end\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      stringGap: [{\n        token: \"text\",\n        regex: /\\\\/,\n        next: \"string\"\n      }, {\n        token: \"error\",\n        regex: \"\",\n        next: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(ElmHighlightRules, TextHighlightRules);\n  exports.ElmHighlightRules = ElmHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/elm\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/elm_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var HighlightRules = acequire(\"./elm_highlight_rules\").ElmHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"{-\",\n      end: \"-}\",\n      nestable: true\n    };\n    this.$id = \"ace/mode/elm\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}