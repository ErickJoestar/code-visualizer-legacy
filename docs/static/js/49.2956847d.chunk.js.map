{"version":3,"sources":["../node_modules/brace/mode/graphqlschema.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","GraphQLSchemaHighlightRules","keywordMapper","this","createKeywordMapper","$rules","token","regex","next","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","$id"],"mappings":"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","file":"static/js/49.2956847d.chunk.js","sourcesContent":["ace.define(\"ace/mode/graphqlschema_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var GraphQLSchemaHighlightRules = function GraphQLSchemaHighlightRules() {\n    var keywords = \"type|interface|union|enum|schema|input|implements|extends|scalar\";\n    var dataTypes = \"Int|Float|String|ID|Boolean\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"storage.type\": dataTypes\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(GraphQLSchemaHighlightRules, TextHighlightRules);\n  exports.GraphQLSchemaHighlightRules = GraphQLSchemaHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/graphqlschema\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/graphqlschema_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var GraphQLSchemaHighlightRules = acequire(\"./graphqlschema_highlight_rules\").GraphQLSchemaHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = GraphQLSchemaHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/graphqlschema\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}