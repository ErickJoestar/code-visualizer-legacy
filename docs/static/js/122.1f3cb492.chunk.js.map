{"version":3,"sources":["../node_modules/brace/mode/scss.js"],"names":["ace","define","acequire","exports","module","oop","lang","TextHighlightRules","ScssHighlightRules","properties","arrayToMap","browserPrefix","split","prefixProperties","ret","i","ln","length","Array","prototype","push","apply","join","functions","constants","colors","keywords","tags","numRe","this","$rules","token","regex","next","value","hasOwnProperty","toLowerCase","caseInsensitive","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","match","getLine","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","CstyleBehaviour","Behaviour","TokenIterator","CssBehaviour","inherit","add","state","action","editor","session","text","cursor","getCursorPosition","iterator","getCurrentToken","stepBackward","type","substring","selection","range","selected","getTextRange","isMultiLine","start","end","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","index","openingBracketBlock","getCommentFoldRange","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","tab","tokens","getTokenizer","getLineTokens","$id"],"mappings":"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","file":"static/js/122.1f3cb492.chunk.js","sourcesContent":["ace.define(\"ace/mode/scss_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var lang = acequire(\"../lib/lang\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var ScssHighlightRules = function ScssHighlightRules() {\n    var properties = lang.arrayToMap(function () {\n      var browserPrefix = \"-webkit-|-moz-|-o-|-ms-|-svg-|-pie-|-khtml-\".split(\"|\");\n      var prefixProperties = (\"appearance|background-clip|background-inline-policy|background-origin|\" + \"background-size|binding|border-bottom-colors|border-left-colors|\" + \"border-right-colors|border-top-colors|border-end|border-end-color|\" + \"border-end-style|border-end-width|border-image|border-start|\" + \"border-start-color|border-start-style|border-start-width|box-align|\" + \"box-direction|box-flex|box-flexgroup|box-ordinal-group|box-orient|\" + \"box-pack|box-sizing|column-count|column-gap|column-width|column-rule|\" + \"column-rule-width|column-rule-style|column-rule-color|float-edge|\" + \"font-feature-settings|font-language-override|force-broken-image-icon|\" + \"image-region|margin-end|margin-start|opacity|outline|outline-color|\" + \"outline-offset|outline-radius|outline-radius-bottomleft|\" + \"outline-radius-bottomright|outline-radius-topleft|outline-radius-topright|\" + \"outline-style|outline-width|padding-end|padding-start|stack-sizing|\" + \"tab-size|text-blink|text-decoration-color|text-decoration-line|\" + \"text-decoration-style|transform|transform-origin|transition|\" + \"transition-delay|transition-duration|transition-property|\" + \"transition-timing-function|user-focus|user-input|user-modify|user-select|\" + \"window-shadow|border-radius\").split(\"|\");\n      var properties = (\"azimuth|background-attachment|background-color|background-image|\" + \"background-position|background-repeat|background|border-bottom-color|\" + \"border-bottom-style|border-bottom-width|border-bottom|border-collapse|\" + \"border-color|border-left-color|border-left-style|border-left-width|\" + \"border-left|border-right-color|border-right-style|border-right-width|\" + \"border-right|border-spacing|border-style|border-top-color|\" + \"border-top-style|border-top-width|border-top|border-width|border|bottom|\" + \"box-shadow|box-sizing|caption-side|clear|clip|color|content|counter-increment|\" + \"counter-reset|cue-after|cue-before|cue|cursor|direction|display|\" + \"elevation|empty-cells|float|font-family|font-size-adjust|font-size|\" + \"font-stretch|font-style|font-variant|font-weight|font|height|left|\" + \"letter-spacing|line-height|list-style-image|list-style-position|\" + \"list-style-type|list-style|margin-bottom|margin-left|margin-right|\" + \"margin-top|marker-offset|margin|marks|max-height|max-width|min-height|\" + \"min-width|opacity|orphans|outline-color|\" + \"outline-style|outline-width|outline|overflow|overflow-x|overflow-y|padding-bottom|\" + \"padding-left|padding-right|padding-top|padding|page-break-after|\" + \"page-break-before|page-break-inside|page|pause-after|pause-before|\" + \"pause|pitch-range|pitch|play-during|position|quotes|richness|right|\" + \"size|speak-header|speak-numeral|speak-punctuation|speech-rate|speak|\" + \"stress|table-layout|text-align|text-decoration|text-indent|\" + \"text-shadow|text-transform|top|unicode-bidi|vertical-align|\" + \"visibility|voice-family|volume|white-space|widows|width|word-spacing|\" + \"z-index\").split(\"|\");\n      var ret = [];\n\n      for (var i = 0, ln = browserPrefix.length; i < ln; i++) {\n        Array.prototype.push.apply(ret, (browserPrefix[i] + prefixProperties.join(\"|\" + browserPrefix[i])).split(\"|\"));\n      }\n\n      Array.prototype.push.apply(ret, prefixProperties);\n      Array.prototype.push.apply(ret, properties);\n      return ret;\n    }());\n    var functions = lang.arrayToMap((\"hsl|hsla|rgb|rgba|url|attr|counter|counters|abs|adjust_color|adjust_hue|\" + \"alpha|join|blue|ceil|change_color|comparable|complement|darken|desaturate|\" + \"floor|grayscale|green|hue|if|invert|join|length|lighten|lightness|mix|\" + \"nth|opacify|opacity|percentage|quote|red|round|saturate|saturation|\" + \"scale_color|transparentize|type_of|unit|unitless|unquote\").split(\"|\"));\n    var constants = lang.arrayToMap((\"absolute|all-scroll|always|armenian|auto|baseline|below|bidi-override|\" + \"block|bold|bolder|border-box|both|bottom|break-all|break-word|capitalize|center|\" + \"char|circle|cjk-ideographic|col-resize|collapse|content-box|crosshair|dashed|\" + \"decimal-leading-zero|decimal|default|disabled|disc|\" + \"distribute-all-lines|distribute-letter|distribute-space|\" + \"distribute|dotted|double|e-resize|ellipsis|fixed|georgian|groove|\" + \"hand|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|\" + \"ideograph-alpha|ideograph-numeric|ideograph-parenthesis|\" + \"ideograph-space|inactive|inherit|inline-block|inline|inset|inside|\" + \"inter-ideograph|inter-word|italic|justify|katakana-iroha|katakana|\" + \"keep-all|left|lighter|line-edge|line-through|line|list-item|loose|\" + \"lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|\" + \"medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|\" + \"nw-resize|none|normal|not-allowed|nowrap|oblique|outset|outside|\" + \"overline|pointer|progress|relative|repeat-x|repeat-y|repeat|right|\" + \"ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|\" + \"solid|square|static|strict|super|sw-resize|table-footer-group|\" + \"table-header-group|tb-rl|text-bottom|text-top|text|thick|thin|top|\" + \"transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|\" + \"vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|\" + \"zero\").split(\"|\"));\n    var colors = lang.arrayToMap((\"aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|\" + \"blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|\" + \"chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|\" + \"darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|\" + \"darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|\" + \"darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|\" + \"darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|\" + \"dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|\" + \"ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|\" + \"hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|\" + \"lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|\" + \"lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|\" + \"lightsalmon|lightseagreen|lightskyblue|lightslategray|\" + \"lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|\" + \"magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|\" + \"mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|\" + \"mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|\" + \"moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|\" + \"orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|\" + \"papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|\" + \"red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|\" + \"seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|\" + \"springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|\" + \"wheat|white|whitesmoke|yellow|yellowgreen\").split(\"|\"));\n    var keywords = lang.arrayToMap(\"@mixin|@extend|@include|@import|@media|@debug|@warn|@if|@for|@each|@while|@else|@font-face|@-webkit-keyframes|if|and|!default|module|def|end|declare\".split(\"|\"));\n    var tags = lang.arrayToMap((\"a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdo|\" + \"big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|\" + \"command|datalist|dd|del|details|dfn|dir|div|dl|dt|em|embed|fieldset|\" + \"figcaption|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|\" + \"header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|\" + \"link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|\" + \"option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|\" + \"small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|\" + \"textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video|wbr|xmp\").split(\"|\"));\n    var numRe = \"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[\"].*\\\\\\\\$',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: \"['].*\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"constant.numeric\",\n        regex: numRe + \"(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)\"\n      }, {\n        token: \"constant.numeric\",\n        // hex6 color\n        regex: \"#[a-f0-9]{6}\"\n      }, {\n        token: \"constant.numeric\",\n        // hex3 color\n        regex: \"#[a-f0-9]{3}\"\n      }, {\n        token: \"constant.numeric\",\n        regex: numRe\n      }, {\n        token: [\"support.function\", \"string\", \"support.function\"],\n        regex: \"(url\\\\()(.*)(\\\\))\"\n      }, {\n        token: function token(value) {\n          if (properties.hasOwnProperty(value.toLowerCase())) return \"support.type\";\n          if (keywords.hasOwnProperty(value)) return \"keyword\";else if (constants.hasOwnProperty(value)) return \"constant.language\";else if (functions.hasOwnProperty(value)) return \"support.function\";else if (colors.hasOwnProperty(value.toLowerCase())) return \"support.constant.color\";else if (tags.hasOwnProperty(value.toLowerCase())) return \"variable.language\";else return \"text\";\n        },\n        regex: \"\\\\-?[@a-z_][@a-z0-9_\\\\-]*\"\n      }, {\n        token: \"variable\",\n        regex: \"[a-z_\\\\-$][a-z0-9_\\\\-$]*\\\\b\"\n      }, {\n        token: \"variable.language\",\n        regex: \"#[a-z0-9-_]+\"\n      }, {\n        token: \"variable.language\",\n        regex: \"\\\\.[a-z0-9-_]+\"\n      }, {\n        token: \"variable.language\",\n        regex: \":[a-z0-9-_]+\"\n      }, {\n        token: \"constant\",\n        regex: \"[a-z0-9-_]+\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"<|>|<=|>=|==|!=|-|%|#|\\\\+|\\\\$|\\\\+|\\\\*\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        caseInsensitive: true\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }]\n    };\n  };\n\n  oop.inherits(ScssHighlightRules, TextHighlightRules);\n  exports.ScssHighlightRules = ScssHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/behaviour/css\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/mode/behaviour/cstyle\", \"ace/token_iterator\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Behaviour = acequire(\"../behaviour\").Behaviour;\n  var CstyleBehaviour = acequire(\"./cstyle\").CstyleBehaviour;\n  var TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\n  var CssBehaviour = function CssBehaviour() {\n    this.inherit(CstyleBehaviour);\n    this.add(\"colon\", \"insertion\", function (state, action, editor, session, text) {\n      if (text === ':') {\n        var cursor = editor.getCursorPosition();\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n\n        if (token && token.value.match(/\\s+/)) {\n          token = iterator.stepBackward();\n        }\n\n        if (token && token.type === 'support.type') {\n          var line = session.doc.getLine(cursor.row);\n          var rightChar = line.substring(cursor.column, cursor.column + 1);\n\n          if (rightChar === ':') {\n            return {\n              text: '',\n              selection: [1, 1]\n            };\n          }\n\n          if (!line.substring(cursor.column).match(/^\\s*;/)) {\n            return {\n              text: ':;',\n              selection: [1, 1]\n            };\n          }\n        }\n      }\n    });\n    this.add(\"colon\", \"deletion\", function (state, action, editor, session, range) {\n      var selected = session.doc.getTextRange(range);\n\n      if (!range.isMultiLine() && selected === ':') {\n        var cursor = editor.getCursorPosition();\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n\n        if (token && token.value.match(/\\s+/)) {\n          token = iterator.stepBackward();\n        }\n\n        if (token && token.type === 'support.type') {\n          var line = session.doc.getLine(range.start.row);\n          var rightChar = line.substring(range.end.column, range.end.column + 1);\n\n          if (rightChar === ';') {\n            range.end.column++;\n            return range;\n          }\n        }\n      }\n    });\n    this.add(\"semicolon\", \"insertion\", function (state, action, editor, session, text) {\n      if (text === ';') {\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        var rightChar = line.substring(cursor.column, cursor.column + 1);\n\n        if (rightChar === ';') {\n          return {\n            text: '',\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n  };\n\n  oop.inherits(CssBehaviour, CstyleBehaviour);\n  exports.CssBehaviour = CssBehaviour;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/scss\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/scss_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/css\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var ScssHighlightRules = acequire(\"./scss_highlight_rules\").ScssHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CssBehaviour = acequire(\"./behaviour/css\").CssBehaviour;\n  var CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = ScssHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CssBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      var match = line.match(/^.*\\{\\s*$/);\n\n      if (match) {\n        indent += tab;\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/scss\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}