{"version":3,"sources":["../node_modules/brace/mode/jssm.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","JSSMHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","comment","normalizeRules","metaData","fileTypes","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","match","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","blockComment","$id"],"mappings":"8HAAAA,IAAIC,OAAO,gCAAiC,CAAC,UAAW,UAAW,SAAU,cAAe,kCAAkC,SAAUC,EAAUC,EAASC,GACzJ,aAEA,IAAIC,EAAMH,EAAS,cACfI,EAAqBJ,EAAS,0BAA0BI,mBAExDC,EAAqB,WACvBC,KAAKC,OAAS,CACZC,MAAO,CAAC,CACNC,MAAO,oCACPC,MAAO,OACPC,KAAM,CAAC,CACLF,MAAO,oCACPC,MAAO,OACPE,KAAM,OACL,CACDC,aAAc,uBAEhBC,QAAS,iBACR,CACDL,MAAO,oBACPC,MAAO,OACPC,KAAM,CAAC,CACLF,MAAO,oBACPC,MAAO,IACPE,KAAM,OACL,CACDC,aAAc,sBAEhBC,QAAS,iBACR,CACDL,MAAO,uBACPC,MAAO,MACPC,KAAM,CAAC,CACLF,MAAO,uBACPC,MAAO,IACPE,KAAM,OACL,CACDC,aAAc,kBAEhBC,QAAS,eACR,CACDL,MAAO,mBACPC,MAAO,yBACPI,QAAS,UACR,CACDL,MAAO,iCACPC,MAAO,mBACPI,QAAS,wBACR,CACDL,MAAO,iCACPC,MAAO,mBACPI,QAAS,wBACR,CACDL,MAAO,iCACPC,MAAO,sBACPI,QAAS,wBACR,CACDL,MAAO,iCACPC,MAAO,mBACPI,QAAS,wBACR,CACDL,MAAO,mDACPC,MAAO,MACPI,QAAS,eACR,CACDL,MAAO,kDACPC,MAAO,KACPI,QAAS,eACR,CACDL,MAAO,kDACPC,MAAO,KACPI,QAAS,eACR,CACDL,MAAO,iDACPC,MAAO,MACPI,QAAS,eACR,CACDL,MAAO,iDACPC,MAAO,KACPI,QAAS,eACR,CACDL,MAAO,iDACPC,MAAO,KACPI,QAAS,eACR,CACDL,MAAO,qDACPC,MAAO,MACPI,QAAS,eACR,CACDL,MAAO,mDACPC,MAAO,KACPI,QAAS,eACR,CACDL,MAAO,mDACPC,MAAO,KACPI,QAAS,eACR,CACDL,MAAO,kDACPC,MAAO,OACPI,QAAS,eACR,CACDL,MAAO,kDACPC,MAAO,OACPI,QAAS,eACR,CACDL,MAAO,oDACPC,MAAO,OACPI,QAAS,eACR,CACDL,MAAO,oDACPC,MAAO,OACPI,QAAS,eACR,CACDL,MAAO,mDACPC,MAAO,OACPI,QAAS,eACR,CACDL,MAAO,mDACPC,MAAO,OACPI,QAAS,eACR,CACDL,MAAO,mCACPC,MAAO,UACPI,QAAS,+BACR,CACDL,MAAO,gCACPC,MAAO,YACPI,QAAS,qBACR,CACDL,MAAO,yCACPC,MAAO,YACPI,QAAS,yBACR,CACDL,MAAO,iCACPC,MAAO,yBACPI,QAAS,2BAGbR,KAAKS,kBAGPV,EAAmBW,SAAW,CAC5BC,UAAW,CAAC,OAAQ,cACpBC,KAAM,OACNC,UAAW,eAEbhB,EAAIiB,SAASf,EAAoBD,GACjCH,EAAQI,mBAAqBA,KAE/BP,IAAIC,OAAO,0BAA2B,CAAC,UAAW,UAAW,SAAU,cAAe,YAAa,+BAA+B,SAAUC,EAAUC,EAASC,GAC7J,aAEA,IAAIC,EAAMH,EAAS,iBACfqB,EAAQrB,EAAS,eAAeqB,MAChCC,EAAetB,EAAS,eAAeuB,SAEvCA,EAAWtB,EAAQsB,SAAW,SAAUC,GACtCA,IACFlB,KAAKmB,mBAAqB,IAAIC,OAAOpB,KAAKmB,mBAAmBE,OAAOC,QAAQ,YAAa,IAAMJ,EAAahB,QAC5GF,KAAKuB,kBAAoB,IAAIH,OAAOpB,KAAKuB,kBAAkBF,OAAOC,QAAQ,YAAa,IAAMJ,EAAaM,QAI9G3B,EAAIiB,SAASG,EAAUD,GACvB,WACEhB,KAAKmB,mBAAqB,mCAC1BnB,KAAKuB,kBAAoB,uCACzBvB,KAAKyB,yBAA2B,uBAChCzB,KAAK0B,yBAA2B,2BAChC1B,KAAK2B,cAAgB,4BACrB3B,KAAK4B,mBAAqB5B,KAAK6B,cAE/B7B,KAAK6B,cAAgB,SAAUC,EAASC,EAAWC,GACjD,IAAIC,EAAOH,EAAQI,QAAQF,GAE3B,GAAIhC,KAAKyB,yBAAyBU,KAAKF,KAChCjC,KAAK2B,cAAcQ,KAAKF,KAAUjC,KAAK0B,yBAAyBS,KAAKF,GAAO,MAAO,GAG1F,IAAIG,EAAKpC,KAAK4B,mBAAmBE,EAASC,EAAWC,GAErD,OAAKI,GAAMpC,KAAK2B,cAAcQ,KAAKF,GAAc,QAE1CG,GAGTpC,KAAKqC,mBAAqB,SAAUP,EAASC,EAAWC,EAAKM,GAC3D,IAmBIC,EAnBAN,EAAOH,EAAQI,QAAQF,GAC3B,GAAIhC,KAAK2B,cAAcQ,KAAKF,GAAO,OAAOjC,KAAKwC,sBAAsBV,EAASG,EAAMD,GAGpF,GAFIO,EAAQN,EAAKM,MAAMvC,KAAKmB,oBAEjB,CACT,IAAIsB,EAAIF,EAAMG,MACd,GAAIH,EAAM,GAAI,OAAOvC,KAAK2C,oBAAoBb,EAASS,EAAM,GAAIP,EAAKS,GACtE,IAAIG,EAAQd,EAAQe,oBAAoBb,EAAKS,EAAIF,EAAM,GAAGO,OAAQ,GAQlE,OANIF,IAAUA,EAAMG,gBACdT,EACFM,EAAQ5C,KAAKgD,gBAAgBlB,EAASE,GAChB,OAAbD,IAAoBa,EAAQ,OAGlCA,EAGT,GAAkB,cAAdb,IACAQ,EAAQN,EAAKM,MAAMvC,KAAKuB,oBAEjB,CACLkB,EAAIF,EAAMG,MAAQH,EAAM,GAAGO,OAC/B,OAAIP,EAAM,GAAWvC,KAAKiD,oBAAoBnB,EAASS,EAAM,GAAIP,EAAKS,GAC/DX,EAAQe,oBAAoBb,EAAKS,GAAI,KAIhDzC,KAAKgD,gBAAkB,SAAUlB,EAASE,GASxC,IARA,IAAIC,EAAOH,EAAQI,QAAQF,GACvBkB,EAAcjB,EAAKkB,OAAO,MAC1BC,EAAWpB,EACXqB,EAAcpB,EAAKa,OAEnBQ,EADJtB,GAAY,EAERuB,EAASzB,EAAQ0B,cAEZxB,EAAMuB,GAAQ,CAErB,IAAIE,GADJxB,EAAOH,EAAQI,QAAQF,IACLmB,OAAO,MACzB,IAAgB,IAAZM,EAAJ,CACA,GAAIP,EAAcO,EAAQ,MAC1B,IAAIC,EAAW1D,KAAKqC,mBAAmBP,EAAS,MAAOE,GAEvD,GAAI0B,EAAU,CACZ,GAAIA,EAASxD,MAAM8B,KAAOoB,EACxB,MACK,GAAIM,EAASX,cAClBf,EAAM0B,EAASlC,IAAIQ,SACd,GAAIkB,GAAeO,EACxB,MAIJH,EAAStB,GAGX,OAAO,IAAIjB,EAAMqC,EAAUC,EAAaC,EAAQxB,EAAQI,QAAQoB,GAAQR,SAG1E9C,KAAKwC,sBAAwB,SAAUV,EAASG,EAAMD,GAOpD,IANA,IAAIqB,EAAcpB,EAAKkB,OAAO,QAC1BI,EAASzB,EAAQ0B,YACjBJ,EAAWpB,EACX2B,EAAK,uCACLC,EAAQ,IAEH5B,EAAMuB,GAAQ,CACrBtB,EAAOH,EAAQI,QAAQF,GACvB,IAAI6B,EAAIF,EAAGG,KAAK7B,GAChB,GAAK4B,IACDA,EAAE,GAAID,IAAaA,KAClBA,GAAO,MAKd,GAFa5B,EAEAoB,EACX,OAAO,IAAIrC,EAAMqC,EAAUC,EAHhBrB,EAGqCC,EAAKa,UAGxDiB,KAAK9C,EAAS+C,cAEnBxE,IAAIC,OAAO,gBAAiB,CAAC,UAAW,UAAW,SAAU,cAAe,gBAAiB,gCAAiC,4BAA4B,SAAUC,EAAUC,EAASC,GACrL,aAEA,IAAIC,EAAMH,EAAS,cACfuE,EAAWvE,EAAS,UAAUwE,KAC9BnE,EAAqBL,EAAS,0BAA0BK,mBACxDkB,EAAWvB,EAAS,oBAAoBuB,SAExCiD,EAAO,WACTlE,KAAKmE,eAAiBpE,EACtBC,KAAKoE,aAAe,IAAInD,GAG1BpB,EAAIiB,SAASoD,EAAMD,GACnB,WACEjE,KAAKqE,iBAAmB,KACxBrE,KAAKsE,aAAe,CAClBpE,MAAO,KACPsB,IAAK,MAEPxB,KAAKuE,IAAM,iBACVR,KAAKG,EAAKF,WACbrE,EAAQuE,KAAOA","file":"static/js/67.d35ea148.chunk.js","sourcesContent":["ace.define(\"ace/mode/jssm_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JSSMHighlightRules = function JSSMHighlightRules() {\n    this.$rules = {\n      start: [{\n        token: \"punctuation.definition.comment.mn\",\n        regex: /\\/\\*/,\n        push: [{\n          token: \"punctuation.definition.comment.mn\",\n          regex: /\\*\\//,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block.jssm\"\n        }],\n        comment: \"block comment\"\n      }, {\n        token: \"comment.line.jssm\",\n        regex: /\\/\\//,\n        push: [{\n          token: \"comment.line.jssm\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.line.jssm\"\n        }],\n        comment: \"block comment\"\n      }, {\n        token: \"entity.name.function\",\n        regex: /\\${/,\n        push: [{\n          token: \"entity.name.function\",\n          regex: /}/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"keyword.other\"\n        }],\n        comment: \"js outcalls\"\n      }, {\n        token: \"constant.numeric\",\n        regex: /[0-9]*\\.[0-9]*\\.[0-9]*/,\n        comment: \"semver\"\n      }, {\n        token: \"constant.language.jssmLanguage\",\n        regex: /graph_layout\\s*:/,\n        comment: \"jssm language tokens\"\n      }, {\n        token: \"constant.language.jssmLanguage\",\n        regex: /machine_name\\s*:/,\n        comment: \"jssm language tokens\"\n      }, {\n        token: \"constant.language.jssmLanguage\",\n        regex: /machine_version\\s*:/,\n        comment: \"jssm language tokens\"\n      }, {\n        token: \"constant.language.jssmLanguage\",\n        regex: /jssm_version\\s*:/,\n        comment: \"jssm language tokens\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.legal_legal\",\n        regex: /<->/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.legal_none\",\n        regex: /<-/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.none_legal\",\n        regex: /->/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.main_main\",\n        regex: /<=>/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.none_main\",\n        regex: /=>/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.main_none\",\n        regex: /<=/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.forced_forced\",\n        regex: /<~>/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.none_forced\",\n        regex: /~>/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.forced_none\",\n        regex: /<~/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.legal_main\",\n        regex: /<-=>/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.main_legal\",\n        regex: /<=->/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.legal_forced\",\n        regex: /<-~>/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.forced_legal\",\n        regex: /<~->/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.main_forced\",\n        regex: /<=~>/,\n        comment: \"transitions\"\n      }, {\n        token: \"keyword.control.transition.jssmArrow.forced_main\",\n        regex: /<~=>/,\n        comment: \"transitions\"\n      }, {\n        token: \"constant.numeric.jssmProbability\",\n        regex: /[0-9]+%/,\n        comment: \"edge probability annotation\"\n      }, {\n        token: \"constant.character.jssmAction\",\n        regex: /\\'[^']*\\'/,\n        comment: \"action annotation\"\n      }, {\n        token: \"entity.name.tag.jssmLabel.doublequoted\",\n        regex: /\\\"[^\"]*\\\"/,\n        comment: \"jssm label annotation\"\n      }, {\n        token: \"entity.name.tag.jssmLabel.atom\",\n        regex: /[a-zA-Z0-9_.+&()#@!?,]/,\n        comment: \"jssm label annotation\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  JSSMHighlightRules.metaData = {\n    fileTypes: [\"jssm\", \"jssm_state\"],\n    name: \"JSSM\",\n    scopeName: \"source.jssm\"\n  };\n  oop.inherits(JSSMHighlightRules, TextHighlightRules);\n  exports.JSSMHighlightRules = JSSMHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var Range = acequire(\"../../range\").Range;\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/jssm\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/jssm_highlight_rules\", \"ace/mode/folding/cstyle\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var JSSMHighlightRules = acequire(\"./jssm_highlight_rules\").JSSMHighlightRules;\n  var FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = JSSMHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/jssm\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});"],"sourceRoot":""}